/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 9.0, "minX": 0.0, "maxY": 17715.0, "series": [{"data": [[0.0, 149.0], [0.1, 251.0], [0.2, 313.0], [0.3, 406.0], [0.4, 615.0], [0.5, 638.0], [0.6, 706.0], [0.7, 752.0], [0.8, 809.0], [0.9, 832.0], [1.0, 891.0], [1.1, 899.0], [1.2, 918.0], [1.3, 961.0], [1.4, 971.0], [1.5, 982.0], [1.6, 1025.0], [1.7, 1059.0], [1.8, 1123.0], [1.9, 1233.0], [2.0, 1257.0], [2.1, 1315.0], [2.2, 1335.0], [2.3, 1341.0], [2.4, 1353.0], [2.5, 1381.0], [2.6, 1396.0], [2.7, 1439.0], [2.8, 1445.0], [2.9, 1474.0], [3.0, 1490.0], [3.1, 1507.0], [3.2, 1525.0], [3.3, 1536.0], [3.4, 1559.0], [3.5, 1561.0], [3.6, 1591.0], [3.7, 1609.0], [3.8, 1665.0], [3.9, 1682.0], [4.0, 1685.0], [4.1, 1695.0], [4.2, 1704.0], [4.3, 1756.0], [4.4, 1782.0], [4.5, 1832.0], [4.6, 1913.0], [4.7, 1929.0], [4.8, 1947.0], [4.9, 1951.0], [5.0, 1968.0], [5.1, 1993.0], [5.2, 2001.0], [5.3, 2010.0], [5.4, 2013.0], [5.5, 2017.0], [5.6, 2038.0], [5.7, 2079.0], [5.8, 2085.0], [5.9, 2094.0], [6.0, 2125.0], [6.1, 2133.0], [6.2, 2159.0], [6.3, 2183.0], [6.4, 2184.0], [6.5, 2191.0], [6.6, 2202.0], [6.7, 2203.0], [6.8, 2214.0], [6.9, 2248.0], [7.0, 2267.0], [7.1, 2286.0], [7.2, 2327.0], [7.3, 2366.0], [7.4, 2390.0], [7.5, 2398.0], [7.6, 2413.0], [7.7, 2454.0], [7.8, 2477.0], [7.9, 2515.0], [8.0, 2524.0], [8.1, 2537.0], [8.2, 2548.0], [8.3, 2562.0], [8.4, 2572.0], [8.5, 2601.0], [8.6, 2645.0], [8.7, 2676.0], [8.8, 2690.0], [8.9, 2709.0], [9.0, 2729.0], [9.1, 2760.0], [9.2, 2775.0], [9.3, 2782.0], [9.4, 2807.0], [9.5, 2823.0], [9.6, 2835.0], [9.7, 2873.0], [9.8, 2878.0], [9.9, 2882.0], [10.0, 2888.0], [10.1, 2907.0], [10.2, 2908.0], [10.3, 2922.0], [10.4, 2977.0], [10.5, 3034.0], [10.6, 3102.0], [10.7, 3138.0], [10.8, 3161.0], [10.9, 3189.0], [11.0, 3248.0], [11.1, 3270.0], [11.2, 3272.0], [11.3, 3307.0], [11.4, 3319.0], [11.5, 3329.0], [11.6, 3341.0], [11.7, 3352.0], [11.8, 3396.0], [11.9, 3406.0], [12.0, 3431.0], [12.1, 3457.0], [12.2, 3473.0], [12.3, 3481.0], [12.4, 3495.0], [12.5, 3508.0], [12.6, 3514.0], [12.7, 3520.0], [12.8, 3554.0], [12.9, 3603.0], [13.0, 3628.0], [13.1, 3682.0], [13.2, 3693.0], [13.3, 3709.0], [13.4, 3726.0], [13.5, 3741.0], [13.6, 3764.0], [13.7, 3767.0], [13.8, 3783.0], [13.9, 3791.0], [14.0, 3832.0], [14.1, 3883.0], [14.2, 3894.0], [14.3, 3896.0], [14.4, 3906.0], [14.5, 3919.0], [14.6, 3940.0], [14.7, 3953.0], [14.8, 3973.0], [14.9, 3984.0], [15.0, 3988.0], [15.1, 4035.0], [15.2, 4059.0], [15.3, 4068.0], [15.4, 4109.0], [15.5, 4128.0], [15.6, 4161.0], [15.7, 4178.0], [15.8, 4220.0], [15.9, 4247.0], [16.0, 4273.0], [16.1, 4312.0], [16.2, 4328.0], [16.3, 4350.0], [16.4, 4372.0], [16.5, 4413.0], [16.6, 4442.0], [16.7, 4465.0], [16.8, 4484.0], [16.9, 4495.0], [17.0, 4570.0], [17.1, 4590.0], [17.2, 4596.0], [17.3, 4624.0], [17.4, 4633.0], [17.5, 4661.0], [17.6, 4716.0], [17.7, 4719.0], [17.8, 4777.0], [17.9, 4783.0], [18.0, 4789.0], [18.1, 4827.0], [18.2, 4859.0], [18.3, 4917.0], [18.4, 4939.0], [18.5, 4942.0], [18.6, 4957.0], [18.7, 4962.0], [18.8, 4977.0], [18.9, 4989.0], [19.0, 5001.0], [19.1, 5004.0], [19.2, 5029.0], [19.3, 5033.0], [19.4, 5076.0], [19.5, 5091.0], [19.6, 5103.0], [19.7, 5162.0], [19.8, 5175.0], [19.9, 5192.0], [20.0, 5198.0], [20.1, 5224.0], [20.2, 5232.0], [20.3, 5239.0], [20.4, 5257.0], [20.5, 5263.0], [20.6, 5271.0], [20.7, 5277.0], [20.8, 5302.0], [20.9, 5309.0], [21.0, 5312.0], [21.1, 5314.0], [21.2, 5332.0], [21.3, 5346.0], [21.4, 5349.0], [21.5, 5355.0], [21.6, 5361.0], [21.7, 5367.0], [21.8, 5384.0], [21.9, 5399.0], [22.0, 5414.0], [22.1, 5427.0], [22.2, 5434.0], [22.3, 5442.0], [22.4, 5456.0], [22.5, 5458.0], [22.6, 5467.0], [22.7, 5471.0], [22.8, 5473.0], [22.9, 5483.0], [23.0, 5487.0], [23.1, 5492.0], [23.2, 5496.0], [23.3, 5504.0], [23.4, 5514.0], [23.5, 5523.0], [23.6, 5524.0], [23.7, 5528.0], [23.8, 5535.0], [23.9, 5537.0], [24.0, 5544.0], [24.1, 5551.0], [24.2, 5569.0], [24.3, 5573.0], [24.4, 5578.0], [24.5, 5596.0], [24.6, 5606.0], [24.7, 5611.0], [24.8, 5622.0], [24.9, 5626.0], [25.0, 5628.0], [25.1, 5633.0], [25.2, 5645.0], [25.3, 5654.0], [25.4, 5661.0], [25.5, 5670.0], [25.6, 5683.0], [25.7, 5688.0], [25.8, 5694.0], [25.9, 5702.0], [26.0, 5715.0], [26.1, 5723.0], [26.2, 5732.0], [26.3, 5743.0], [26.4, 5761.0], [26.5, 5769.0], [26.6, 5779.0], [26.7, 5781.0], [26.8, 5801.0], [26.9, 5810.0], [27.0, 5818.0], [27.1, 5824.0], [27.2, 5832.0], [27.3, 5844.0], [27.4, 5857.0], [27.5, 5859.0], [27.6, 5872.0], [27.7, 5877.0], [27.8, 5897.0], [27.9, 5899.0], [28.0, 5903.0], [28.1, 5909.0], [28.2, 5917.0], [28.3, 5924.0], [28.4, 5928.0], [28.5, 5945.0], [28.6, 5953.0], [28.7, 5954.0], [28.8, 5960.0], [28.9, 5967.0], [29.0, 5971.0], [29.1, 5974.0], [29.2, 5976.0], [29.3, 5979.0], [29.4, 5982.0], [29.5, 5984.0], [29.6, 5992.0], [29.7, 5995.0], [29.8, 6008.0], [29.9, 6011.0], [30.0, 6021.0], [30.1, 6024.0], [30.2, 6027.0], [30.3, 6029.0], [30.4, 6031.0], [30.5, 6032.0], [30.6, 6047.0], [30.7, 6051.0], [30.8, 6053.0], [30.9, 6055.0], [31.0, 6061.0], [31.1, 6067.0], [31.2, 6069.0], [31.3, 6074.0], [31.4, 6087.0], [31.5, 6091.0], [31.6, 6093.0], [31.7, 6097.0], [31.8, 6104.0], [31.9, 6111.0], [32.0, 6114.0], [32.1, 6116.0], [32.2, 6118.0], [32.3, 6128.0], [32.4, 6130.0], [32.5, 6136.0], [32.6, 6137.0], [32.7, 6138.0], [32.8, 6145.0], [32.9, 6149.0], [33.0, 6155.0], [33.1, 6156.0], [33.2, 6161.0], [33.3, 6178.0], [33.4, 6184.0], [33.5, 6188.0], [33.6, 6198.0], [33.7, 6204.0], [33.8, 6212.0], [33.9, 6214.0], [34.0, 6216.0], [34.1, 6217.0], [34.2, 6234.0], [34.3, 6239.0], [34.4, 6244.0], [34.5, 6251.0], [34.6, 6256.0], [34.7, 6261.0], [34.8, 6272.0], [34.9, 6274.0], [35.0, 6278.0], [35.1, 6284.0], [35.2, 6289.0], [35.3, 6296.0], [35.4, 6305.0], [35.5, 6318.0], [35.6, 6320.0], [35.7, 6328.0], [35.8, 6339.0], [35.9, 6342.0], [36.0, 6354.0], [36.1, 6369.0], [36.2, 6377.0], [36.3, 6387.0], [36.4, 6395.0], [36.5, 6398.0], [36.6, 6401.0], [36.7, 6402.0], [36.8, 6407.0], [36.9, 6411.0], [37.0, 6412.0], [37.1, 6413.0], [37.2, 6414.0], [37.3, 6418.0], [37.4, 6418.0], [37.5, 6420.0], [37.6, 6421.0], [37.7, 6427.0], [37.8, 6437.0], [37.9, 6441.0], [38.0, 6446.0], [38.1, 6451.0], [38.2, 6458.0], [38.3, 6462.0], [38.4, 6467.0], [38.5, 6474.0], [38.6, 6480.0], [38.7, 6493.0], [38.8, 6503.0], [38.9, 6504.0], [39.0, 6518.0], [39.1, 6520.0], [39.2, 6525.0], [39.3, 6532.0], [39.4, 6540.0], [39.5, 6545.0], [39.6, 6562.0], [39.7, 6571.0], [39.8, 6587.0], [39.9, 6595.0], [40.0, 6602.0], [40.1, 6608.0], [40.2, 6628.0], [40.3, 6640.0], [40.4, 6654.0], [40.5, 6656.0], [40.6, 6669.0], [40.7, 6681.0], [40.8, 6700.0], [40.9, 6708.0], [41.0, 6711.0], [41.1, 6718.0], [41.2, 6718.0], [41.3, 6722.0], [41.4, 6728.0], [41.5, 6732.0], [41.6, 6734.0], [41.7, 6740.0], [41.8, 6745.0], [41.9, 6749.0], [42.0, 6757.0], [42.1, 6763.0], [42.2, 6764.0], [42.3, 6766.0], [42.4, 6768.0], [42.5, 6771.0], [42.6, 6772.0], [42.7, 6776.0], [42.8, 6777.0], [42.9, 6781.0], [43.0, 6782.0], [43.1, 6784.0], [43.2, 6790.0], [43.3, 6793.0], [43.4, 6795.0], [43.5, 6798.0], [43.6, 6803.0], [43.7, 6811.0], [43.8, 6818.0], [43.9, 6820.0], [44.0, 6824.0], [44.1, 6838.0], [44.2, 6844.0], [44.3, 6852.0], [44.4, 6890.0], [44.5, 6892.0], [44.6, 6900.0], [44.7, 6908.0], [44.8, 6919.0], [44.9, 6924.0], [45.0, 6926.0], [45.1, 6947.0], [45.2, 6952.0], [45.3, 6964.0], [45.4, 6980.0], [45.5, 7033.0], [45.6, 7042.0], [45.7, 7057.0], [45.8, 7079.0], [45.9, 7086.0], [46.0, 7089.0], [46.1, 7114.0], [46.2, 7118.0], [46.3, 7136.0], [46.4, 7154.0], [46.5, 7161.0], [46.6, 7180.0], [46.7, 7180.0], [46.8, 7196.0], [46.9, 7200.0], [47.0, 7224.0], [47.1, 7231.0], [47.2, 7256.0], [47.3, 7266.0], [47.4, 7276.0], [47.5, 7282.0], [47.6, 7285.0], [47.7, 7285.0], [47.8, 7291.0], [47.9, 7302.0], [48.0, 7322.0], [48.1, 7343.0], [48.2, 7355.0], [48.3, 7379.0], [48.4, 7386.0], [48.5, 7393.0], [48.6, 7411.0], [48.7, 7415.0], [48.8, 7425.0], [48.9, 7442.0], [49.0, 7461.0], [49.1, 7479.0], [49.2, 7493.0], [49.3, 7526.0], [49.4, 7555.0], [49.5, 7579.0], [49.6, 7584.0], [49.7, 7602.0], [49.8, 7604.0], [49.9, 7622.0], [50.0, 7634.0], [50.1, 7646.0], [50.2, 7653.0], [50.3, 7660.0], [50.4, 7667.0], [50.5, 7672.0], [50.6, 7679.0], [50.7, 7685.0], [50.8, 7705.0], [50.9, 7710.0], [51.0, 7726.0], [51.1, 7757.0], [51.2, 7765.0], [51.3, 7800.0], [51.4, 7852.0], [51.5, 7868.0], [51.6, 7877.0], [51.7, 7880.0], [51.8, 7892.0], [51.9, 7913.0], [52.0, 7942.0], [52.1, 7980.0], [52.2, 7986.0], [52.3, 8056.0], [52.4, 8079.0], [52.5, 8083.0], [52.6, 8097.0], [52.7, 8110.0], [52.8, 8117.0], [52.9, 8125.0], [53.0, 8152.0], [53.1, 8184.0], [53.2, 8212.0], [53.3, 8235.0], [53.4, 8265.0], [53.5, 8276.0], [53.6, 8313.0], [53.7, 8332.0], [53.8, 8340.0], [53.9, 8351.0], [54.0, 8412.0], [54.1, 8437.0], [54.2, 8466.0], [54.3, 8481.0], [54.4, 8506.0], [54.5, 8529.0], [54.6, 8544.0], [54.7, 8566.0], [54.8, 8591.0], [54.9, 8615.0], [55.0, 8627.0], [55.1, 8681.0], [55.2, 8737.0], [55.3, 8757.0], [55.4, 8782.0], [55.5, 8806.0], [55.6, 8833.0], [55.7, 8883.0], [55.8, 8901.0], [55.9, 8953.0], [56.0, 8975.0], [56.1, 8986.0], [56.2, 9044.0], [56.3, 9059.0], [56.4, 9174.0], [56.5, 9225.0], [56.6, 9313.0], [56.7, 9407.0], [56.8, 9505.0], [56.9, 9537.0], [57.0, 9550.0], [57.1, 9638.0], [57.2, 9704.0], [57.3, 9767.0], [57.4, 9922.0], [57.5, 9929.0], [57.6, 9974.0], [57.7, 10031.0], [57.8, 10101.0], [57.9, 10154.0], [58.0, 10248.0], [58.1, 10343.0], [58.2, 10391.0], [58.3, 10418.0], [58.4, 10498.0], [58.5, 10530.0], [58.6, 10568.0], [58.7, 10600.0], [58.8, 10664.0], [58.9, 10736.0], [59.0, 10749.0], [59.1, 10787.0], [59.2, 10827.0], [59.3, 10857.0], [59.4, 10894.0], [59.5, 10923.0], [59.6, 10996.0], [59.7, 11032.0], [59.8, 11081.0], [59.9, 11127.0], [60.0, 11144.0], [60.1, 11155.0], [60.2, 11189.0], [60.3, 11247.0], [60.4, 11284.0], [60.5, 11301.0], [60.6, 11324.0], [60.7, 11359.0], [60.8, 11391.0], [60.9, 11424.0], [61.0, 11432.0], [61.1, 11441.0], [61.2, 11451.0], [61.3, 11465.0], [61.4, 11472.0], [61.5, 11485.0], [61.6, 11513.0], [61.7, 11521.0], [61.8, 11525.0], [61.9, 11538.0], [62.0, 11544.0], [62.1, 11556.0], [62.2, 11598.0], [62.3, 11607.0], [62.4, 11644.0], [62.5, 11653.0], [62.6, 11673.0], [62.7, 11696.0], [62.8, 11717.0], [62.9, 11734.0], [63.0, 11762.0], [63.1, 11795.0], [63.2, 11811.0], [63.3, 11820.0], [63.4, 11829.0], [63.5, 11841.0], [63.6, 11858.0], [63.7, 11862.0], [63.8, 11881.0], [63.9, 11905.0], [64.0, 11949.0], [64.1, 11957.0], [64.2, 11969.0], [64.3, 11972.0], [64.4, 11979.0], [64.5, 11993.0], [64.6, 12006.0], [64.7, 12008.0], [64.8, 12011.0], [64.9, 12021.0], [65.0, 12026.0], [65.1, 12033.0], [65.2, 12035.0], [65.3, 12040.0], [65.4, 12059.0], [65.5, 12063.0], [65.6, 12082.0], [65.7, 12087.0], [65.8, 12096.0], [65.9, 12099.0], [66.0, 12102.0], [66.1, 12111.0], [66.2, 12114.0], [66.3, 12120.0], [66.4, 12125.0], [66.5, 12131.0], [66.6, 12132.0], [66.7, 12149.0], [66.8, 12154.0], [66.9, 12172.0], [67.0, 12176.0], [67.1, 12200.0], [67.2, 12204.0], [67.3, 12206.0], [67.4, 12215.0], [67.5, 12226.0], [67.6, 12231.0], [67.7, 12252.0], [67.8, 12262.0], [67.9, 12285.0], [68.0, 12292.0], [68.1, 12307.0], [68.2, 12309.0], [68.3, 12315.0], [68.4, 12320.0], [68.5, 12331.0], [68.6, 12353.0], [68.7, 12357.0], [68.8, 12367.0], [68.9, 12369.0], [69.0, 12379.0], [69.1, 12388.0], [69.2, 12407.0], [69.3, 12423.0], [69.4, 12430.0], [69.5, 12433.0], [69.6, 12446.0], [69.7, 12460.0], [69.8, 12484.0], [69.9, 12495.0], [70.0, 12510.0], [70.1, 12521.0], [70.2, 12523.0], [70.3, 12534.0], [70.4, 12554.0], [70.5, 12562.0], [70.6, 12566.0], [70.7, 12575.0], [70.8, 12583.0], [70.9, 12594.0], [71.0, 12598.0], [71.1, 12609.0], [71.2, 12612.0], [71.3, 12620.0], [71.4, 12629.0], [71.5, 12630.0], [71.6, 12634.0], [71.7, 12637.0], [71.8, 12650.0], [71.9, 12663.0], [72.0, 12666.0], [72.1, 12669.0], [72.2, 12677.0], [72.3, 12686.0], [72.4, 12688.0], [72.5, 12706.0], [72.6, 12707.0], [72.7, 12712.0], [72.8, 12717.0], [72.9, 12722.0], [73.0, 12732.0], [73.1, 12738.0], [73.2, 12744.0], [73.3, 12748.0], [73.4, 12756.0], [73.5, 12758.0], [73.6, 12758.0], [73.7, 12770.0], [73.8, 12772.0], [73.9, 12775.0], [74.0, 12778.0], [74.1, 12780.0], [74.2, 12783.0], [74.3, 12787.0], [74.4, 12793.0], [74.5, 12796.0], [74.6, 12801.0], [74.7, 12807.0], [74.8, 12811.0], [74.9, 12815.0], [75.0, 12820.0], [75.1, 12820.0], [75.2, 12832.0], [75.3, 12833.0], [75.4, 12836.0], [75.5, 12849.0], [75.6, 12855.0], [75.7, 12865.0], [75.8, 12871.0], [75.9, 12876.0], [76.0, 12882.0], [76.1, 12888.0], [76.2, 12902.0], [76.3, 12916.0], [76.4, 12938.0], [76.5, 12944.0], [76.6, 12950.0], [76.7, 12954.0], [76.8, 12960.0], [76.9, 12976.0], [77.0, 12978.0], [77.1, 12990.0], [77.2, 12996.0], [77.3, 13002.0], [77.4, 13011.0], [77.5, 13025.0], [77.6, 13037.0], [77.7, 13047.0], [77.8, 13052.0], [77.9, 13054.0], [78.0, 13058.0], [78.1, 13060.0], [78.2, 13071.0], [78.3, 13087.0], [78.4, 13091.0], [78.5, 13101.0], [78.6, 13105.0], [78.7, 13112.0], [78.8, 13119.0], [78.9, 13122.0], [79.0, 13129.0], [79.1, 13133.0], [79.2, 13142.0], [79.3, 13152.0], [79.4, 13157.0], [79.5, 13164.0], [79.6, 13174.0], [79.7, 13176.0], [79.8, 13197.0], [79.9, 13203.0], [80.0, 13207.0], [80.1, 13211.0], [80.2, 13214.0], [80.3, 13216.0], [80.4, 13224.0], [80.5, 13227.0], [80.6, 13243.0], [80.7, 13253.0], [80.8, 13256.0], [80.9, 13267.0], [81.0, 13279.0], [81.1, 13288.0], [81.2, 13295.0], [81.3, 13301.0], [81.4, 13302.0], [81.5, 13308.0], [81.6, 13311.0], [81.7, 13316.0], [81.8, 13318.0], [81.9, 13329.0], [82.0, 13334.0], [82.1, 13345.0], [82.2, 13352.0], [82.3, 13353.0], [82.4, 13358.0], [82.5, 13364.0], [82.6, 13369.0], [82.7, 13375.0], [82.8, 13377.0], [82.9, 13387.0], [83.0, 13388.0], [83.1, 13391.0], [83.2, 13396.0], [83.3, 13408.0], [83.4, 13410.0], [83.5, 13417.0], [83.6, 13427.0], [83.7, 13434.0], [83.8, 13438.0], [83.9, 13439.0], [84.0, 13448.0], [84.1, 13449.0], [84.2, 13456.0], [84.3, 13464.0], [84.4, 13466.0], [84.5, 13466.0], [84.6, 13479.0], [84.7, 13483.0], [84.8, 13503.0], [84.9, 13508.0], [85.0, 13514.0], [85.1, 13521.0], [85.2, 13528.0], [85.3, 13545.0], [85.4, 13554.0], [85.5, 13555.0], [85.6, 13557.0], [85.7, 13560.0], [85.8, 13574.0], [85.9, 13581.0], [86.0, 13597.0], [86.1, 13608.0], [86.2, 13610.0], [86.3, 13628.0], [86.4, 13637.0], [86.5, 13656.0], [86.6, 13660.0], [86.7, 13664.0], [86.8, 13666.0], [86.9, 13674.0], [87.0, 13685.0], [87.1, 13688.0], [87.2, 13713.0], [87.3, 13727.0], [87.4, 13737.0], [87.5, 13747.0], [87.6, 13767.0], [87.7, 13771.0], [87.8, 13782.0], [87.9, 13788.0], [88.0, 13801.0], [88.1, 13803.0], [88.2, 13804.0], [88.3, 13808.0], [88.4, 13809.0], [88.5, 13822.0], [88.6, 13827.0], [88.7, 13830.0], [88.8, 13847.0], [88.9, 13876.0], [89.0, 13883.0], [89.1, 13894.0], [89.2, 13899.0], [89.3, 13902.0], [89.4, 13918.0], [89.5, 13919.0], [89.6, 13923.0], [89.7, 13935.0], [89.8, 13939.0], [89.9, 13952.0], [90.0, 13962.0], [90.1, 13977.0], [90.2, 13990.0], [90.3, 14012.0], [90.4, 14013.0], [90.5, 14022.0], [90.6, 14029.0], [90.7, 14031.0], [90.8, 14041.0], [90.9, 14053.0], [91.0, 14068.0], [91.1, 14075.0], [91.2, 14085.0], [91.3, 14096.0], [91.4, 14100.0], [91.5, 14121.0], [91.6, 14129.0], [91.7, 14136.0], [91.8, 14147.0], [91.9, 14157.0], [92.0, 14161.0], [92.1, 14170.0], [92.2, 14183.0], [92.3, 14201.0], [92.4, 14203.0], [92.5, 14207.0], [92.6, 14212.0], [92.7, 14226.0], [92.8, 14244.0], [92.9, 14258.0], [93.0, 14268.0], [93.1, 14274.0], [93.2, 14289.0], [93.3, 14298.0], [93.4, 14306.0], [93.5, 14309.0], [93.6, 14340.0], [93.7, 14367.0], [93.8, 14377.0], [93.9, 14380.0], [94.0, 14385.0], [94.1, 14393.0], [94.2, 14396.0], [94.3, 14417.0], [94.4, 14433.0], [94.5, 14435.0], [94.6, 14454.0], [94.7, 14480.0], [94.8, 14486.0], [94.9, 14494.0], [95.0, 14505.0], [95.1, 14510.0], [95.2, 14523.0], [95.3, 14537.0], [95.4, 14540.0], [95.5, 14556.0], [95.6, 14557.0], [95.7, 14588.0], [95.8, 14614.0], [95.9, 14622.0], [96.0, 14627.0], [96.1, 14694.0], [96.2, 14719.0], [96.3, 14761.0], [96.4, 14785.0], [96.5, 14796.0], [96.6, 14809.0], [96.7, 14861.0], [96.8, 14869.0], [96.9, 14885.0], [97.0, 14926.0], [97.1, 14982.0], [97.2, 14992.0], [97.3, 15001.0], [97.4, 15014.0], [97.5, 15054.0], [97.6, 15059.0], [97.7, 15099.0], [97.8, 15121.0], [97.9, 15149.0], [98.0, 15171.0], [98.1, 15210.0], [98.2, 15230.0], [98.3, 15312.0], [98.4, 15327.0], [98.5, 15347.0], [98.6, 15423.0], [98.7, 15445.0], [98.8, 15526.0], [98.9, 15636.0], [99.0, 15688.0], [99.1, 15799.0], [99.2, 15859.0], [99.3, 15902.0], [99.4, 16125.0], [99.5, 16213.0], [99.6, 16254.0], [99.7, 16335.0], [99.8, 16645.0], [99.9, 17479.0]], "isOverall": false, "label": "/sys/user/psw/reset", "isController": false}, {"data": [[0.0, 9.0], [0.1, 20.0], [0.2, 24.0], [0.3, 31.0], [0.4, 33.0], [0.5, 40.0], [0.6, 41.0], [0.7, 50.0], [0.8, 56.0], [0.9, 61.0], [1.0, 64.0], [1.1, 65.0], [1.2, 69.0], [1.3, 81.0], [1.4, 85.0], [1.5, 86.0], [1.6, 91.0], [1.7, 93.0], [1.8, 96.0], [1.9, 111.0], [2.0, 115.0], [2.1, 119.0], [2.2, 121.0], [2.3, 127.0], [2.4, 133.0], [2.5, 137.0], [2.6, 143.0], [2.7, 145.0], [2.8, 173.0], [2.9, 186.0], [3.0, 264.0], [3.1, 467.0], [3.2, 530.0], [3.3, 582.0], [3.4, 595.0], [3.5, 614.0], [3.6, 622.0], [3.7, 657.0], [3.8, 681.0], [3.9, 696.0], [4.0, 726.0], [4.1, 773.0], [4.2, 806.0], [4.3, 836.0], [4.4, 858.0], [4.5, 860.0], [4.6, 872.0], [4.7, 876.0], [4.8, 904.0], [4.9, 959.0], [5.0, 965.0], [5.1, 1028.0], [5.2, 1033.0], [5.3, 1079.0], [5.4, 1112.0], [5.5, 1185.0], [5.6, 1213.0], [5.7, 1297.0], [5.8, 1309.0], [5.9, 1332.0], [6.0, 1375.0], [6.1, 1420.0], [6.2, 1448.0], [6.3, 1461.0], [6.4, 1500.0], [6.5, 1532.0], [6.6, 1702.0], [6.7, 2136.0], [6.8, 2182.0], [6.9, 2226.0], [7.0, 2357.0], [7.1, 2399.0], [7.2, 2431.0], [7.3, 2459.0], [7.4, 2499.0], [7.5, 2594.0], [7.6, 2615.0], [7.7, 2697.0], [7.8, 2723.0], [7.9, 2734.0], [8.0, 2744.0], [8.1, 2765.0], [8.2, 2808.0], [8.3, 2809.0], [8.4, 2837.0], [8.5, 2841.0], [8.6, 2872.0], [8.7, 2910.0], [8.8, 2927.0], [8.9, 2975.0], [9.0, 2998.0], [9.1, 3039.0], [9.2, 3044.0], [9.3, 3107.0], [9.4, 3123.0], [9.5, 3136.0], [9.6, 3182.0], [9.7, 3197.0], [9.8, 3217.0], [9.9, 3253.0], [10.0, 3265.0], [10.1, 3268.0], [10.2, 3283.0], [10.3, 3311.0], [10.4, 3323.0], [10.5, 3327.0], [10.6, 3340.0], [10.7, 3381.0], [10.8, 3417.0], [10.9, 3421.0], [11.0, 3449.0], [11.1, 3465.0], [11.2, 3476.0], [11.3, 3483.0], [11.4, 3538.0], [11.5, 3543.0], [11.6, 3585.0], [11.7, 3594.0], [11.8, 3619.0], [11.9, 3633.0], [12.0, 3644.0], [12.1, 3670.0], [12.2, 3718.0], [12.3, 3751.0], [12.4, 3786.0], [12.5, 3817.0], [12.6, 3877.0], [12.7, 3913.0], [12.8, 3933.0], [12.9, 3961.0], [13.0, 4008.0], [13.1, 4035.0], [13.2, 4051.0], [13.3, 4064.0], [13.4, 4087.0], [13.5, 4095.0], [13.6, 4132.0], [13.7, 4174.0], [13.8, 4185.0], [13.9, 4194.0], [14.0, 4196.0], [14.1, 4202.0], [14.2, 4214.0], [14.3, 4267.0], [14.4, 4304.0], [14.5, 4308.0], [14.6, 4341.0], [14.7, 4349.0], [14.8, 4374.0], [14.9, 4400.0], [15.0, 4466.0], [15.1, 4467.0], [15.2, 4477.0], [15.3, 4503.0], [15.4, 4519.0], [15.5, 4531.0], [15.6, 4538.0], [15.7, 4551.0], [15.8, 4568.0], [15.9, 4577.0], [16.0, 4583.0], [16.1, 4596.0], [16.2, 4632.0], [16.3, 4635.0], [16.4, 4672.0], [16.5, 4678.0], [16.6, 4702.0], [16.7, 4731.0], [16.8, 4755.0], [16.9, 4762.0], [17.0, 4775.0], [17.1, 4806.0], [17.2, 4822.0], [17.3, 4845.0], [17.4, 4858.0], [17.5, 4860.0], [17.6, 4882.0], [17.7, 4894.0], [17.8, 4922.0], [17.9, 4948.0], [18.0, 4951.0], [18.1, 4955.0], [18.2, 4960.0], [18.3, 4971.0], [18.4, 4974.0], [18.5, 4975.0], [18.6, 4986.0], [18.7, 4995.0], [18.8, 5000.0], [18.9, 5013.0], [19.0, 5030.0], [19.1, 5037.0], [19.2, 5062.0], [19.3, 5095.0], [19.4, 5116.0], [19.5, 5121.0], [19.6, 5124.0], [19.7, 5132.0], [19.8, 5152.0], [19.9, 5156.0], [20.0, 5160.0], [20.1, 5180.0], [20.2, 5186.0], [20.3, 5195.0], [20.4, 5198.0], [20.5, 5211.0], [20.6, 5216.0], [20.7, 5235.0], [20.8, 5239.0], [20.9, 5247.0], [21.0, 5263.0], [21.1, 5268.0], [21.2, 5277.0], [21.3, 5293.0], [21.4, 5296.0], [21.5, 5300.0], [21.6, 5309.0], [21.7, 5329.0], [21.8, 5331.0], [21.9, 5349.0], [22.0, 5350.0], [22.1, 5353.0], [22.2, 5372.0], [22.3, 5379.0], [22.4, 5382.0], [22.5, 5390.0], [22.6, 5402.0], [22.7, 5406.0], [22.8, 5411.0], [22.9, 5424.0], [23.0, 5444.0], [23.1, 5451.0], [23.2, 5464.0], [23.3, 5474.0], [23.4, 5479.0], [23.5, 5486.0], [23.6, 5494.0], [23.7, 5500.0], [23.8, 5511.0], [23.9, 5516.0], [24.0, 5517.0], [24.1, 5526.0], [24.2, 5528.0], [24.3, 5543.0], [24.4, 5552.0], [24.5, 5576.0], [24.6, 5605.0], [24.7, 5622.0], [24.8, 5633.0], [24.9, 5647.0], [25.0, 5655.0], [25.1, 5667.0], [25.2, 5686.0], [25.3, 5690.0], [25.4, 5694.0], [25.5, 5701.0], [25.6, 5707.0], [25.7, 5712.0], [25.8, 5726.0], [25.9, 5756.0], [26.0, 5763.0], [26.1, 5770.0], [26.2, 5777.0], [26.3, 5789.0], [26.4, 5795.0], [26.5, 5803.0], [26.6, 5806.0], [26.7, 5824.0], [26.8, 5830.0], [26.9, 5837.0], [27.0, 5848.0], [27.1, 5855.0], [27.2, 5857.0], [27.3, 5866.0], [27.4, 5884.0], [27.5, 5904.0], [27.6, 5920.0], [27.7, 5924.0], [27.8, 5927.0], [27.9, 5934.0], [28.0, 5941.0], [28.1, 5944.0], [28.2, 5952.0], [28.3, 5954.0], [28.4, 5961.0], [28.5, 5963.0], [28.6, 5973.0], [28.7, 5985.0], [28.8, 5996.0], [28.9, 5999.0], [29.0, 6005.0], [29.1, 6012.0], [29.2, 6013.0], [29.3, 6023.0], [29.4, 6030.0], [29.5, 6032.0], [29.6, 6034.0], [29.7, 6047.0], [29.8, 6056.0], [29.9, 6059.0], [30.0, 6063.0], [30.1, 6064.0], [30.2, 6069.0], [30.3, 6076.0], [30.4, 6076.0], [30.5, 6080.0], [30.6, 6085.0], [30.7, 6101.0], [30.8, 6102.0], [30.9, 6113.0], [31.0, 6117.0], [31.1, 6127.0], [31.2, 6137.0], [31.3, 6142.0], [31.4, 6146.0], [31.5, 6160.0], [31.6, 6171.0], [31.7, 6175.0], [31.8, 6180.0], [31.9, 6190.0], [32.0, 6192.0], [32.1, 6204.0], [32.2, 6207.0], [32.3, 6209.0], [32.4, 6221.0], [32.5, 6229.0], [32.6, 6252.0], [32.7, 6271.0], [32.8, 6273.0], [32.9, 6284.0], [33.0, 6291.0], [33.1, 6295.0], [33.2, 6300.0], [33.3, 6311.0], [33.4, 6346.0], [33.5, 6350.0], [33.6, 6367.0], [33.7, 6378.0], [33.8, 6393.0], [33.9, 6404.0], [34.0, 6408.0], [34.1, 6435.0], [34.2, 6436.0], [34.3, 6437.0], [34.4, 6465.0], [34.5, 6496.0], [34.6, 6528.0], [34.7, 6545.0], [34.8, 6555.0], [34.9, 6564.0], [35.0, 6580.0], [35.1, 6586.0], [35.2, 6589.0], [35.3, 6597.0], [35.4, 6607.0], [35.5, 6609.0], [35.6, 6612.0], [35.7, 6626.0], [35.8, 6628.0], [35.9, 6631.0], [36.0, 6638.0], [36.1, 6663.0], [36.2, 6682.0], [36.3, 6689.0], [36.4, 6694.0], [36.5, 6701.0], [36.6, 6706.0], [36.7, 6712.0], [36.8, 6715.0], [36.9, 6717.0], [37.0, 6719.0], [37.1, 6719.0], [37.2, 6730.0], [37.3, 6739.0], [37.4, 6744.0], [37.5, 6745.0], [37.6, 6748.0], [37.7, 6757.0], [37.8, 6772.0], [37.9, 6776.0], [38.0, 6787.0], [38.1, 6794.0], [38.2, 6804.0], [38.3, 6807.0], [38.4, 6810.0], [38.5, 6819.0], [38.6, 6848.0], [38.7, 6874.0], [38.8, 6899.0], [38.9, 6909.0], [39.0, 6938.0], [39.1, 6950.0], [39.2, 6967.0], [39.3, 6974.0], [39.4, 6978.0], [39.5, 6985.0], [39.6, 6995.0], [39.7, 7015.0], [39.8, 7023.0], [39.9, 7027.0], [40.0, 7035.0], [40.1, 7046.0], [40.2, 7049.0], [40.3, 7052.0], [40.4, 7058.0], [40.5, 7064.0], [40.6, 7072.0], [40.7, 7099.0], [40.8, 7139.0], [40.9, 7149.0], [41.0, 7183.0], [41.1, 7200.0], [41.2, 7215.0], [41.3, 7217.0], [41.4, 7228.0], [41.5, 7229.0], [41.6, 7251.0], [41.7, 7256.0], [41.8, 7270.0], [41.9, 7283.0], [42.0, 7291.0], [42.1, 7294.0], [42.2, 7305.0], [42.3, 7317.0], [42.4, 7320.0], [42.5, 7351.0], [42.6, 7356.0], [42.7, 7369.0], [42.8, 7388.0], [42.9, 7397.0], [43.0, 7416.0], [43.1, 7421.0], [43.2, 7443.0], [43.3, 7456.0], [43.4, 7501.0], [43.5, 7505.0], [43.6, 7520.0], [43.7, 7527.0], [43.8, 7533.0], [43.9, 7547.0], [44.0, 7549.0], [44.1, 7553.0], [44.2, 7566.0], [44.3, 7576.0], [44.4, 7596.0], [44.5, 7616.0], [44.6, 7621.0], [44.7, 7631.0], [44.8, 7633.0], [44.9, 7635.0], [45.0, 7649.0], [45.1, 7657.0], [45.2, 7672.0], [45.3, 7681.0], [45.4, 7692.0], [45.5, 7701.0], [45.6, 7712.0], [45.7, 7750.0], [45.8, 7766.0], [45.9, 7789.0], [46.0, 7799.0], [46.1, 7840.0], [46.2, 7871.0], [46.3, 7909.0], [46.4, 7933.0], [46.5, 7943.0], [46.6, 7963.0], [46.7, 7980.0], [46.8, 7990.0], [46.9, 8012.0], [47.0, 8022.0], [47.1, 8027.0], [47.2, 8043.0], [47.3, 8044.0], [47.4, 8055.0], [47.5, 8064.0], [47.6, 8084.0], [47.7, 8089.0], [47.8, 8092.0], [47.9, 8097.0], [48.0, 8099.0], [48.1, 8117.0], [48.2, 8137.0], [48.3, 8147.0], [48.4, 8163.0], [48.5, 8169.0], [48.6, 8170.0], [48.7, 8184.0], [48.8, 8205.0], [48.9, 8209.0], [49.0, 8216.0], [49.1, 8231.0], [49.2, 8250.0], [49.3, 8255.0], [49.4, 8260.0], [49.5, 8270.0], [49.6, 8297.0], [49.7, 8303.0], [49.8, 8308.0], [49.9, 8326.0], [50.0, 8329.0], [50.1, 8336.0], [50.2, 8351.0], [50.3, 8361.0], [50.4, 8365.0], [50.5, 8368.0], [50.6, 8376.0], [50.7, 8381.0], [50.8, 8392.0], [50.9, 8398.0], [51.0, 8414.0], [51.1, 8415.0], [51.2, 8427.0], [51.3, 8434.0], [51.4, 8439.0], [51.5, 8446.0], [51.6, 8451.0], [51.7, 8454.0], [51.8, 8464.0], [51.9, 8506.0], [52.0, 8512.0], [52.1, 8514.0], [52.2, 8520.0], [52.3, 8537.0], [52.4, 8550.0], [52.5, 8555.0], [52.6, 8569.0], [52.7, 8579.0], [52.8, 8612.0], [52.9, 8622.0], [53.0, 8645.0], [53.1, 8652.0], [53.2, 8673.0], [53.3, 8678.0], [53.4, 8697.0], [53.5, 8698.0], [53.6, 8708.0], [53.7, 8714.0], [53.8, 8728.0], [53.9, 8734.0], [54.0, 8737.0], [54.1, 8773.0], [54.2, 8790.0], [54.3, 8803.0], [54.4, 8813.0], [54.5, 8837.0], [54.6, 8839.0], [54.7, 8842.0], [54.8, 8844.0], [54.9, 8855.0], [55.0, 8862.0], [55.1, 8876.0], [55.2, 8877.0], [55.3, 8896.0], [55.4, 8920.0], [55.5, 8931.0], [55.6, 8947.0], [55.7, 8965.0], [55.8, 8980.0], [55.9, 9000.0], [56.0, 9004.0], [56.1, 9007.0], [56.2, 9017.0], [56.3, 9024.0], [56.4, 9027.0], [56.5, 9042.0], [56.6, 9046.0], [56.7, 9077.0], [56.8, 9093.0], [56.9, 9104.0], [57.0, 9126.0], [57.1, 9130.0], [57.2, 9142.0], [57.3, 9144.0], [57.4, 9150.0], [57.5, 9162.0], [57.6, 9167.0], [57.7, 9171.0], [57.8, 9198.0], [57.9, 9216.0], [58.0, 9232.0], [58.1, 9237.0], [58.2, 9239.0], [58.3, 9251.0], [58.4, 9253.0], [58.5, 9262.0], [58.6, 9278.0], [58.7, 9283.0], [58.8, 9287.0], [58.9, 9294.0], [59.0, 9321.0], [59.1, 9331.0], [59.2, 9347.0], [59.3, 9359.0], [59.4, 9372.0], [59.5, 9389.0], [59.6, 9391.0], [59.7, 9397.0], [59.8, 9402.0], [59.9, 9411.0], [60.0, 9416.0], [60.1, 9430.0], [60.2, 9440.0], [60.3, 9465.0], [60.4, 9471.0], [60.5, 9487.0], [60.6, 9497.0], [60.7, 9501.0], [60.8, 9513.0], [60.9, 9515.0], [61.0, 9541.0], [61.1, 9553.0], [61.2, 9564.0], [61.3, 9573.0], [61.4, 9593.0], [61.5, 9610.0], [61.6, 9618.0], [61.7, 9623.0], [61.8, 9635.0], [61.9, 9644.0], [62.0, 9645.0], [62.1, 9651.0], [62.2, 9658.0], [62.3, 9668.0], [62.4, 9674.0], [62.5, 9687.0], [62.6, 9692.0], [62.7, 9699.0], [62.8, 9710.0], [62.9, 9728.0], [63.0, 9761.0], [63.1, 9772.0], [63.2, 9776.0], [63.3, 9785.0], [63.4, 9791.0], [63.5, 9792.0], [63.6, 9804.0], [63.7, 9813.0], [63.8, 9816.0], [63.9, 9820.0], [64.0, 9824.0], [64.1, 9841.0], [64.2, 9847.0], [64.3, 9854.0], [64.4, 9859.0], [64.5, 9862.0], [64.6, 9880.0], [64.7, 9891.0], [64.8, 9899.0], [64.9, 9913.0], [65.0, 9920.0], [65.1, 9930.0], [65.2, 9935.0], [65.3, 9943.0], [65.4, 9951.0], [65.5, 9952.0], [65.6, 9958.0], [65.7, 9959.0], [65.8, 9967.0], [65.9, 9975.0], [66.0, 9978.0], [66.1, 9980.0], [66.2, 9986.0], [66.3, 9997.0], [66.4, 10002.0], [66.5, 10011.0], [66.6, 10013.0], [66.7, 10021.0], [66.8, 10032.0], [66.9, 10042.0], [67.0, 10065.0], [67.1, 10087.0], [67.2, 10117.0], [67.3, 10121.0], [67.4, 10130.0], [67.5, 10134.0], [67.6, 10137.0], [67.7, 10145.0], [67.8, 10152.0], [67.9, 10164.0], [68.0, 10171.0], [68.1, 10192.0], [68.2, 10209.0], [68.3, 10214.0], [68.4, 10227.0], [68.5, 10235.0], [68.6, 10242.0], [68.7, 10249.0], [68.8, 10252.0], [68.9, 10255.0], [69.0, 10259.0], [69.1, 10267.0], [69.2, 10268.0], [69.3, 10269.0], [69.4, 10270.0], [69.5, 10275.0], [69.6, 10277.0], [69.7, 10285.0], [69.8, 10292.0], [69.9, 10294.0], [70.0, 10296.0], [70.1, 10298.0], [70.2, 10300.0], [70.3, 10305.0], [70.4, 10305.0], [70.5, 10308.0], [70.6, 10311.0], [70.7, 10313.0], [70.8, 10318.0], [70.9, 10333.0], [71.0, 10337.0], [71.1, 10338.0], [71.2, 10343.0], [71.3, 10351.0], [71.4, 10357.0], [71.5, 10370.0], [71.6, 10380.0], [71.7, 10388.0], [71.8, 10389.0], [71.9, 10392.0], [72.0, 10393.0], [72.1, 10429.0], [72.2, 10435.0], [72.3, 10459.0], [72.4, 10471.0], [72.5, 10481.0], [72.6, 10484.0], [72.7, 10485.0], [72.8, 10500.0], [72.9, 10503.0], [73.0, 10512.0], [73.1, 10522.0], [73.2, 10531.0], [73.3, 10537.0], [73.4, 10556.0], [73.5, 10562.0], [73.6, 10564.0], [73.7, 10570.0], [73.8, 10585.0], [73.9, 10591.0], [74.0, 10594.0], [74.1, 10598.0], [74.2, 10602.0], [74.3, 10611.0], [74.4, 10618.0], [74.5, 10623.0], [74.6, 10626.0], [74.7, 10647.0], [74.8, 10652.0], [74.9, 10656.0], [75.0, 10665.0], [75.1, 10678.0], [75.2, 10681.0], [75.3, 10685.0], [75.4, 10687.0], [75.5, 10700.0], [75.6, 10704.0], [75.7, 10706.0], [75.8, 10712.0], [75.9, 10713.0], [76.0, 10720.0], [76.1, 10732.0], [76.2, 10737.0], [76.3, 10741.0], [76.4, 10746.0], [76.5, 10755.0], [76.6, 10758.0], [76.7, 10764.0], [76.8, 10776.0], [76.9, 10791.0], [77.0, 10798.0], [77.1, 10805.0], [77.2, 10805.0], [77.3, 10812.0], [77.4, 10829.0], [77.5, 10844.0], [77.6, 10872.0], [77.7, 10882.0], [77.8, 10891.0], [77.9, 10899.0], [78.0, 10940.0], [78.1, 10955.0], [78.2, 10973.0], [78.3, 10989.0], [78.4, 10991.0], [78.5, 11004.0], [78.6, 11011.0], [78.7, 11016.0], [78.8, 11020.0], [78.9, 11029.0], [79.0, 11041.0], [79.1, 11046.0], [79.2, 11054.0], [79.3, 11058.0], [79.4, 11060.0], [79.5, 11063.0], [79.6, 11066.0], [79.7, 11068.0], [79.8, 11075.0], [79.9, 11084.0], [80.0, 11089.0], [80.1, 11104.0], [80.2, 11112.0], [80.3, 11116.0], [80.4, 11122.0], [80.5, 11128.0], [80.6, 11131.0], [80.7, 11147.0], [80.8, 11153.0], [80.9, 11159.0], [81.0, 11171.0], [81.1, 11176.0], [81.2, 11186.0], [81.3, 11188.0], [81.4, 11191.0], [81.5, 11193.0], [81.6, 11197.0], [81.7, 11199.0], [81.8, 11202.0], [81.9, 11204.0], [82.0, 11206.0], [82.1, 11213.0], [82.2, 11217.0], [82.3, 11220.0], [82.4, 11231.0], [82.5, 11234.0], [82.6, 11238.0], [82.7, 11242.0], [82.8, 11250.0], [82.9, 11260.0], [83.0, 11263.0], [83.1, 11267.0], [83.2, 11276.0], [83.3, 11276.0], [83.4, 11285.0], [83.5, 11290.0], [83.6, 11299.0], [83.7, 11303.0], [83.8, 11308.0], [83.9, 11321.0], [84.0, 11325.0], [84.1, 11335.0], [84.2, 11346.0], [84.3, 11358.0], [84.4, 11363.0], [84.5, 11379.0], [84.6, 11382.0], [84.7, 11386.0], [84.8, 11406.0], [84.9, 11411.0], [85.0, 11424.0], [85.1, 11433.0], [85.2, 11443.0], [85.3, 11448.0], [85.4, 11450.0], [85.5, 11452.0], [85.6, 11456.0], [85.7, 11459.0], [85.8, 11463.0], [85.9, 11466.0], [86.0, 11475.0], [86.1, 11485.0], [86.2, 11496.0], [86.3, 11517.0], [86.4, 11533.0], [86.5, 11541.0], [86.6, 11578.0], [86.7, 11582.0], [86.8, 11593.0], [86.9, 11608.0], [87.0, 11613.0], [87.1, 11637.0], [87.2, 11645.0], [87.3, 11650.0], [87.4, 11668.0], [87.5, 11680.0], [87.6, 11704.0], [87.7, 11707.0], [87.8, 11713.0], [87.9, 11719.0], [88.0, 11730.0], [88.1, 11733.0], [88.2, 11748.0], [88.3, 11759.0], [88.4, 11777.0], [88.5, 11781.0], [88.6, 11791.0], [88.7, 11833.0], [88.8, 11860.0], [88.9, 11876.0], [89.0, 11879.0], [89.1, 11886.0], [89.2, 11888.0], [89.3, 11900.0], [89.4, 11914.0], [89.5, 11916.0], [89.6, 11929.0], [89.7, 11939.0], [89.8, 11942.0], [89.9, 11949.0], [90.0, 11981.0], [90.1, 11991.0], [90.2, 12006.0], [90.3, 12013.0], [90.4, 12018.0], [90.5, 12021.0], [90.6, 12053.0], [90.7, 12075.0], [90.8, 12086.0], [90.9, 12093.0], [91.0, 12098.0], [91.1, 12128.0], [91.2, 12133.0], [91.3, 12149.0], [91.4, 12151.0], [91.5, 12162.0], [91.6, 12175.0], [91.7, 12195.0], [91.8, 12207.0], [91.9, 12220.0], [92.0, 12258.0], [92.1, 12269.0], [92.2, 12276.0], [92.3, 12288.0], [92.4, 12314.0], [92.5, 12343.0], [92.6, 12371.0], [92.7, 12387.0], [92.8, 12412.0], [92.9, 12426.0], [93.0, 12456.0], [93.1, 12465.0], [93.2, 12479.0], [93.3, 12500.0], [93.4, 12522.0], [93.5, 12533.0], [93.6, 12613.0], [93.7, 12658.0], [93.8, 12735.0], [93.9, 12751.0], [94.0, 12769.0], [94.1, 12783.0], [94.2, 12824.0], [94.3, 12843.0], [94.4, 12906.0], [94.5, 12922.0], [94.6, 12980.0], [94.7, 13008.0], [94.8, 13036.0], [94.9, 13075.0], [95.0, 13145.0], [95.1, 13190.0], [95.2, 13193.0], [95.3, 13217.0], [95.4, 13254.0], [95.5, 13291.0], [95.6, 13320.0], [95.7, 13326.0], [95.8, 13330.0], [95.9, 13358.0], [96.0, 13362.0], [96.1, 13377.0], [96.2, 13396.0], [96.3, 13423.0], [96.4, 13474.0], [96.5, 13507.0], [96.6, 13525.0], [96.7, 13584.0], [96.8, 13599.0], [96.9, 13611.0], [97.0, 13625.0], [97.1, 13677.0], [97.2, 13690.0], [97.3, 13750.0], [97.4, 13775.0], [97.5, 13864.0], [97.6, 13912.0], [97.7, 13932.0], [97.8, 13963.0], [97.9, 13965.0], [98.0, 13987.0], [98.1, 13993.0], [98.2, 14006.0], [98.3, 14009.0], [98.4, 14016.0], [98.5, 14086.0], [98.6, 14121.0], [98.7, 14129.0], [98.8, 14137.0], [98.9, 14148.0], [99.0, 14191.0], [99.1, 14204.0], [99.2, 14301.0], [99.3, 14372.0], [99.4, 14606.0], [99.5, 14750.0], [99.6, 14780.0], [99.7, 14941.0], [99.8, 15191.0], [99.9, 15868.0]], "isOverall": false, "label": "/sys/user/state/update", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 55.0, "series": [{"data": [[100.0, 1.0], [200.0, 3.0], [300.0, 2.0], [400.0, 1.0], [500.0, 1.0], [600.0, 4.0], [700.0, 3.0], [800.0, 7.0], [900.0, 8.0], [1000.0, 5.0], [1100.0, 1.0], [1200.0, 4.0], [1300.0, 13.0], [1400.0, 9.0], [1500.0, 12.0], [1600.0, 9.0], [1700.0, 7.0], [1800.0, 1.0], [1900.0, 12.0], [2000.0, 17.0], [2100.0, 11.0], [2200.0, 12.0], [2300.0, 8.0], [2400.0, 7.0], [2500.0, 12.0], [2600.0, 8.0], [2700.0, 9.0], [2800.0, 13.0], [2900.0, 8.0], [3000.0, 3.0], [3100.0, 7.0], [3300.0, 11.0], [3200.0, 7.0], [3400.0, 13.0], [3500.0, 8.0], [3700.0, 15.0], [3600.0, 7.0], [3800.0, 7.0], [3900.0, 14.0], [4000.0, 7.0], [4300.0, 9.0], [4100.0, 8.0], [4200.0, 5.0], [4500.0, 7.0], [4400.0, 9.0], [4600.0, 5.0], [4700.0, 11.0], [4800.0, 3.0], [5000.0, 12.0], [4900.0, 15.0], [5100.0, 9.0], [5300.0, 23.0], [5200.0, 15.0], [5400.0, 26.0], [5600.0, 27.0], [5500.0, 26.0], [5700.0, 18.0], [5800.0, 23.0], [5900.0, 36.0], [6000.0, 40.0], [6100.0, 39.0], [6200.0, 33.0], [6300.0, 24.0], [6600.0, 17.0], [6500.0, 24.0], [6400.0, 45.0], [6700.0, 55.0], [6900.0, 18.0], [6800.0, 20.0], [7000.0, 12.0], [7100.0, 17.0], [7400.0, 14.0], [7200.0, 20.0], [7300.0, 13.0], [7600.0, 22.0], [7500.0, 9.0], [7900.0, 8.0], [7700.0, 10.0], [7800.0, 11.0], [8100.0, 11.0], [8000.0, 8.0], [8700.0, 7.0], [8500.0, 10.0], [8300.0, 9.0], [8400.0, 7.0], [8200.0, 7.0], [8600.0, 6.0], [8900.0, 8.0], [8800.0, 6.0], [9200.0, 3.0], [9000.0, 4.0], [9100.0, 1.0], [9300.0, 2.0], [9700.0, 4.0], [9400.0, 2.0], [9600.0, 2.0], [9500.0, 6.0], [10100.0, 4.0], [9900.0, 6.0], [10200.0, 2.0], [10000.0, 2.0], [10400.0, 3.0], [10700.0, 6.0], [10600.0, 3.0], [10500.0, 5.0], [10300.0, 4.0], [11000.0, 4.0], [11100.0, 8.0], [10900.0, 4.0], [10800.0, 6.0], [11200.0, 5.0], [11600.0, 10.0], [11500.0, 13.0], [11400.0, 15.0], [11700.0, 8.0], [11300.0, 7.0], [12200.0, 20.0], [11800.0, 15.0], [12100.0, 23.0], [12000.0, 28.0], [11900.0, 13.0], [12400.0, 15.0], [12500.0, 22.0], [12600.0, 28.0], [12700.0, 42.0], [12300.0, 22.0], [13000.0, 24.0], [13200.0, 29.0], [13300.0, 40.0], [12900.0, 21.0], [13100.0, 28.0], [12800.0, 33.0], [13500.0, 25.0], [13800.0, 25.0], [13700.0, 16.0], [13600.0, 23.0], [13400.0, 30.0], [14000.0, 22.0], [14300.0, 17.0], [14200.0, 22.0], [13900.0, 21.0], [14100.0, 18.0], [14500.0, 16.0], [14600.0, 9.0], [14400.0, 14.0], [14700.0, 7.0], [14800.0, 8.0], [15000.0, 9.0], [15200.0, 4.0], [14900.0, 7.0], [15100.0, 7.0], [15300.0, 6.0], [15600.0, 3.0], [15400.0, 3.0], [15800.0, 3.0], [15700.0, 2.0], [15500.0, 3.0], [16100.0, 2.0], [15900.0, 1.0], [16300.0, 2.0], [16200.0, 3.0], [16000.0, 1.0], [16500.0, 1.0], [17200.0, 1.0], [16600.0, 1.0], [17400.0, 1.0], [17700.0, 1.0]], "isOverall": false, "label": "/sys/user/psw/reset", "isController": false}, {"data": [[0.0, 37.0], [100.0, 22.0], [200.0, 2.0], [400.0, 2.0], [500.0, 6.0], [600.0, 10.0], [700.0, 5.0], [800.0, 12.0], [900.0, 5.0], [1000.0, 7.0], [1100.0, 4.0], [1200.0, 3.0], [1300.0, 7.0], [1400.0, 6.0], [1500.0, 3.0], [1600.0, 1.0], [1700.0, 1.0], [2100.0, 4.0], [2300.0, 3.0], [2200.0, 3.0], [2400.0, 6.0], [2500.0, 2.0], [2600.0, 4.0], [2700.0, 8.0], [2800.0, 11.0], [2900.0, 7.0], [3000.0, 5.0], [3100.0, 8.0], [3300.0, 10.0], [3200.0, 10.0], [3400.0, 13.0], [3500.0, 7.0], [3600.0, 9.0], [3700.0, 5.0], [3800.0, 5.0], [3900.0, 6.0], [4000.0, 11.0], [4100.0, 10.0], [4200.0, 7.0], [4300.0, 10.0], [4400.0, 7.0], [4500.0, 18.0], [4600.0, 9.0], [4700.0, 10.0], [4800.0, 14.0], [4900.0, 20.0], [5000.0, 11.0], [5100.0, 22.0], [5200.0, 21.0], [5300.0, 21.0], [5400.0, 23.0], [5500.0, 18.0], [5600.0, 18.0], [5700.0, 20.0], [5800.0, 20.0], [5900.0, 29.0], [6000.0, 35.0], [6100.0, 28.0], [6200.0, 22.0], [6300.0, 14.0], [6400.0, 13.0], [6500.0, 16.0], [6600.0, 23.0], [6700.0, 33.0], [6800.0, 14.0], [6900.0, 18.0], [7000.0, 21.0], [7100.0, 7.0], [7200.0, 21.0], [7400.0, 9.0], [7300.0, 16.0], [7500.0, 21.0], [7600.0, 21.0], [7800.0, 5.0], [7900.0, 11.0], [7700.0, 11.0], [8000.0, 24.0], [8100.0, 15.0], [8200.0, 17.0], [8300.0, 26.0], [8400.0, 19.0], [8500.0, 18.0], [8600.0, 15.0], [8700.0, 15.0], [8800.0, 21.0], [8900.0, 11.0], [9000.0, 19.0], [9200.0, 22.0], [9100.0, 20.0], [9300.0, 17.0], [9400.0, 18.0], [9500.0, 15.0], [9600.0, 26.0], [9700.0, 17.0], [9800.0, 26.0], [9900.0, 30.0], [10000.0, 16.0], [10100.0, 19.0], [10200.0, 41.0], [10400.0, 15.0], [10600.0, 27.0], [10300.0, 37.0], [10700.0, 31.0], [10500.0, 27.0], [10900.0, 11.0], [10800.0, 18.0], [11000.0, 32.0], [11100.0, 33.0], [11200.0, 38.0], [11300.0, 23.0], [11400.0, 29.0], [11700.0, 21.0], [11500.0, 12.0], [11600.0, 15.0], [11800.0, 13.0], [12200.0, 12.0], [12000.0, 17.0], [12100.0, 14.0], [11900.0, 18.0], [12300.0, 8.0], [12700.0, 8.0], [12400.0, 11.0], [12500.0, 6.0], [12600.0, 4.0], [12800.0, 4.0], [12900.0, 5.0], [13000.0, 6.0], [13100.0, 6.0], [13200.0, 6.0], [13300.0, 14.0], [13400.0, 5.0], [13800.0, 2.0], [13500.0, 7.0], [13600.0, 8.0], [13700.0, 5.0], [14100.0, 11.0], [13900.0, 12.0], [14000.0, 7.0], [14200.0, 1.0], [14300.0, 4.0], [14600.0, 2.0], [14700.0, 3.0], [14500.0, 1.0], [14900.0, 2.0], [15100.0, 2.0], [15200.0, 1.0], [15800.0, 1.0], [16300.0, 1.0]], "isOverall": false, "label": "/sys/user/state/update", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 17700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 70.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 3809.0, "series": [{"data": [[0.0, 70.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 121.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 3809.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 63.08800000000001, "minX": 1.62977607E12, "maxY": 1000.0, "series": [{"data": [[1.629776072E12, 1000.0], [1.629776092E12, 954.9356725146201], [1.62977607E12, 996.1500000000002], [1.629776096E12, 919.6143344709901], [1.629776074E12, 1000.0], [1.629776094E12, 936.7272727272732], [1.629776088E12, 981.9378881987575], [1.629776108E12, 63.08800000000001], [1.629776086E12, 988.9139784946237], [1.62977609E12, 972.1058823529412], [1.629776104E12, 461.45685279187813], [1.629776082E12, 997.6188118811882], [1.629776102E12, 632.0400000000001], [1.629776106E12, 250.06799999999984], [1.629776084E12, 994.1046511627904], [1.629776098E12, 871.1124260355027], [1.629776076E12, 1000.0], [1.62977608E12, 998.0995024875625], [1.6297761E12, 774.8082191780829], [1.629776078E12, 999.2510121457491]], "isOverall": false, "label": "education", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 2000, "maxX": 1.629776108E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 64.0, "minX": 1.0, "maxY": 14319.6, "series": [{"data": [[2.0, 2150.0], [3.0, 3418.0], [4.0, 5496.0], [5.0, 4160.0], [6.0, 4128.0], [7.0, 5257.0], [8.0, 5655.0], [9.0, 3327.0], [11.0, 5500.5], [12.0, 3341.0], [13.0, 6770.0], [14.0, 5670.0], [16.0, 5507.5], [17.0, 4480.0], [18.0, 4085.0], [19.0, 4068.0], [20.0, 6021.0], [21.0, 6801.0], [22.0, 4059.0], [23.0, 3968.0], [24.0, 3925.0], [25.0, 5645.0], [26.0, 3238.0], [27.0, 4561.0], [28.0, 3953.0], [29.0, 6328.0], [30.0, 4174.0], [31.0, 6067.0], [33.0, 5239.0], [32.0, 5273.0], [35.0, 5367.0], [34.0, 6199.0], [37.0, 5027.0], [36.0, 4633.0], [39.0, 2800.0], [38.0, 3919.0], [41.0, 5442.0], [40.0, 6251.0], [43.0, 4597.0], [42.0, 3369.0], [45.0, 5551.0], [44.0, 5572.0], [46.0, 7033.0], [49.0, 5162.0], [48.0, 3784.5], [51.0, 6418.0], [50.0, 5169.0], [53.0, 6654.0], [52.0, 6595.0], [55.0, 3855.0], [54.0, 6309.0], [57.0, 6525.0], [56.0, 7073.0], [59.0, 5923.5], [61.0, 6387.0], [60.0, 5527.0], [63.0, 5492.0], [62.0, 1546.0], [67.0, 4382.0], [66.0, 6386.0], [65.0, 6128.0], [64.0, 6395.0], [71.0, 3682.0], [70.0, 5801.0], [69.0, 7411.0], [68.0, 5810.0], [75.0, 4442.0], [74.0, 5795.0], [73.0, 3797.0], [72.0, 6518.0], [79.0, 6571.0], [78.0, 5622.0], [77.0, 5810.0], [76.0, 5713.0], [83.0, 7580.0], [82.0, 5651.666666666667], [87.0, 7040.0], [86.0, 6051.0], [85.0, 4413.0], [84.0, 6008.0], [91.0, 5859.0], [90.0, 6584.0], [89.0, 4932.0], [95.0, 4372.0], [94.0, 6221.0], [93.0, 4312.0], [92.0, 6594.0], [99.0, 7089.0], [98.0, 5032.0], [97.0, 6093.0], [96.0, 6024.0], [102.0, 6711.0], [101.0, 6247.0], [100.0, 5221.0], [106.0, 5314.0], [105.0, 6031.0], [104.0, 6824.5], [111.0, 5976.0], [110.0, 6823.0], [109.0, 3005.0], [108.0, 6050.0], [115.0, 6737.0], [114.0, 7180.0], [113.0, 7117.0], [112.0, 6838.0], [119.0, 5694.0], [118.0, 5237.0], [117.0, 6285.0], [116.0, 5458.0], [123.0, 6700.0], [122.0, 5549.0], [121.0, 5727.0], [126.0, 6253.0], [125.0, 3431.0], [124.0, 5357.0], [135.0, 5627.0], [134.0, 6342.0], [133.0, 7224.0], [132.0, 6776.0], [131.0, 8998.0], [130.0, 9929.0], [129.0, 6794.0], [128.0, 5846.0], [143.0, 5733.0], [142.0, 8265.0], [141.0, 7154.0], [140.0, 8351.0], [139.0, 7640.0], [137.0, 6296.0], [151.0, 5715.0], [150.0, 6782.0], [149.0, 4639.0], [148.0, 6342.0], [147.0, 7291.0], [146.0, 8228.0], [145.0, 6398.0], [144.0, 6763.0], [158.0, 6464.0], [157.0, 6803.0], [156.0, 4898.5], [154.0, 6284.0], [153.0, 7224.0], [152.0, 6771.0], [167.0, 7196.0], [166.0, 4977.0], [165.0, 7198.0], [164.0, 6400.0], [163.0, 6524.0], [162.0, 4939.0], [161.0, 6235.0], [175.0, 8340.0], [174.0, 5915.0], [173.0, 5887.0], [172.0, 4958.0], [171.0, 6274.0], [170.0, 9505.0], [169.0, 6412.0], [168.0, 5781.0], [183.0, 5918.0], [182.0, 8187.0], [181.0, 5875.0], [180.0, 5832.0], [179.0, 6536.0], [178.0, 9549.0], [177.0, 6411.0], [176.0, 6900.0], [191.0, 6442.0], [190.0, 6418.0], [189.0, 6441.0], [188.0, 6024.0], [187.0, 7880.0], [186.0, 6278.0], [185.0, 5899.0], [184.0, 6451.0], [199.0, 6792.0], [198.0, 6824.0], [197.0, 8353.0], [196.0, 5945.0], [195.0, 5232.0], [194.0, 6790.0], [193.0, 5763.0], [207.0, 5952.0], [206.0, 6414.0], [205.0, 6480.0], [204.0, 7683.0], [203.0, 6728.0], [202.0, 6407.0], [201.0, 6187.0], [215.0, 5969.0], [214.0, 5897.0], [213.0, 5977.0], [212.0, 6413.0], [211.0, 10433.0], [210.0, 6420.0], [209.0, 5980.0], [208.0, 6771.0], [223.0, 5979.0], [222.0, 5900.0], [221.0, 5903.0], [220.0, 5909.0], [219.0, 5953.0], [218.0, 6427.0], [217.0, 8591.0], [216.0, 7877.0], [231.0, 6480.0], [230.0, 7852.0], [229.0, 5311.0], [228.0, 2010.0], [227.0, 8782.0], [226.0, 5953.0], [225.0, 6408.0], [224.0, 5346.0], [239.0, 6441.0], [238.0, 6421.0], [237.0, 8757.0], [236.0, 6326.0], [235.0, 6389.0], [234.0, 5973.0], [233.0, 6354.0], [232.0, 7860.0], [246.0, 6417.0], [245.0, 6411.0], [244.0, 5983.0], [243.0, 6342.0], [242.0, 6407.0], [241.0, 8827.0], [240.0, 7200.0], [255.0, 6401.0], [254.0, 7419.0], [253.0, 6069.0], [252.0, 5578.0], [251.0, 5523.0], [250.0, 6800.5], [248.0, 5819.5], [270.0, 7413.0], [271.0, 6155.0], [269.0, 5428.0], [268.0, 6300.0], [267.0, 4783.0], [266.0, 7548.0], [264.0, 8066.0], [263.0, 5924.0], [257.0, 5945.0], [256.0, 5423.0], [259.0, 8627.0], [258.0, 7136.0], [262.0, 6278.0], [261.0, 8102.0], [260.0, 5350.0], [286.0, 5773.0], [287.0, 5834.0], [285.0, 6235.0], [284.0, 5361.0], [283.0, 5844.0], [282.0, 5779.0], [281.0, 5848.0], [280.0, 5818.0], [279.0, 5819.0], [273.0, 5857.0], [272.0, 5832.0], [275.0, 5346.0], [274.0, 6161.0], [278.0, 6296.0], [277.0, 7343.0], [276.0, 5393.0], [302.0, 5769.0], [303.0, 6520.0], [301.0, 4773.0], [300.0, 7268.0], [299.0, 6504.0], [298.0, 8504.0], [297.0, 3161.0], [296.0, 6146.0], [295.0, 8128.0], [289.0, 6184.0], [288.0, 5804.0], [291.0, 8506.0], [290.0, 5384.0], [294.0, 6214.0], [293.0, 5824.0], [292.0, 6182.0], [318.0, 5355.0], [319.0, 10538.0], [317.0, 7442.0], [316.0, 4799.0], [315.0, 5685.0], [314.0, 8056.0], [313.0, 7279.0], [312.0, 6783.0], [311.0, 7527.0], [305.0, 5399.0], [304.0, 6467.0], [307.0, 5732.0], [306.0, 7361.0], [310.0, 8083.0], [309.0, 6628.0], [308.0, 8117.0], [334.0, 7677.0], [335.0, 5596.0], [333.0, 7634.0], [332.0, 9075.0], [331.0, 6726.0], [330.0, 6740.0], [329.0, 7630.0], [328.0, 5603.0], [327.0, 6718.0], [321.0, 5224.0], [320.0, 5683.0], [323.0, 5302.0], [322.0, 6811.0], [326.0, 5611.0], [325.0, 6776.0], [324.0, 5611.0], [350.0, 6720.0], [351.0, 4917.0], [349.0, 6753.0], [348.0, 6798.0], [347.0, 5309.0], [346.0, 5246.0], [345.0, 2498.0], [344.0, 5628.0], [343.0, 7672.0], [337.0, 6883.0], [336.0, 7415.0], [339.0, 5661.0], [338.0, 5528.0], [342.0, 6718.0], [341.0, 6708.0], [340.0, 7955.0], [366.0, 4827.0], [367.0, 7873.0], [365.0, 6710.0], [364.0, 6849.0], [363.0, 6108.0], [362.0, 6733.0], [361.0, 6681.0], [360.0, 7622.0], [359.0, 6685.0], [354.0, 6009.0], [353.0, 6488.5], [358.0, 7710.0], [357.0, 4642.0], [356.0, 5610.0], [382.0, 7509.0], [383.0, 6669.0], [381.0, 7445.0], [380.0, 7903.0], [379.0, 5082.0], [378.0, 7555.0], [377.0, 7057.0], [376.0, 6234.0], [375.0, 6118.0], [369.0, 5927.0], [368.0, 5917.0], [371.0, 3352.0], [370.0, 6214.0], [374.0, 6270.0], [373.0, 6784.0], [372.0, 7566.0], [398.0, 6090.0], [399.0, 6115.0], [397.0, 6047.0], [396.0, 6964.0], [395.0, 5029.0], [394.0, 6793.0], [393.0, 7410.0], [392.0, 8412.0], [391.0, 4962.0], [385.0, 6919.0], [384.0, 6777.0], [387.0, 6192.0], [386.0, 7811.0], [390.0, 6921.5], [388.0, 5001.0], [414.0, 4962.0], [415.0, 6957.0], [413.0, 4590.0], [412.0, 7393.0], [411.0, 4989.0], [410.0, 5175.0], [409.0, 7322.0], [408.0, 6908.0], [407.0, 7020.0], [400.0, 7765.0], [403.0, 6933.0], [402.0, 5866.5], [406.0, 7285.0], [405.0, 6075.0], [404.0, 7042.0], [430.0, 6339.0], [431.0, 2013.0], [429.0, 6113.0], [428.0, 7282.0], [427.0, 5669.0], [426.0, 5986.0], [424.0, 6976.0], [423.0, 6156.0], [417.0, 6097.0], [416.0, 1993.0], [419.0, 8079.0], [418.0, 7390.0], [422.0, 6900.0], [421.0, 5825.5], [446.0, 6215.0], [447.0, 6768.0], [445.0, 6789.0], [444.0, 7180.0], [443.0, 6745.0], [442.0, 7114.0], [441.0, 7800.0], [440.0, 6239.0], [439.0, 6763.0], [433.0, 5485.0], [432.0, 7138.0], [435.0, 6778.0], [434.0, 6096.0], [438.0, 6241.0], [437.0, 6029.0], [436.0, 5471.0], [462.0, 7892.0], [463.0, 6732.0], [461.0, 6757.0], [460.0, 7313.0], [459.0, 7885.0], [458.0, 5507.0], [457.0, 6374.0], [456.0, 6422.0], [454.0, 5473.0], [449.0, 6216.0], [448.0, 6204.0], [451.0, 5569.0], [450.0, 6772.0], [453.0, 8566.0], [452.0, 6401.0], [478.0, 6319.0], [479.0, 8552.0], [477.0, 6602.0], [476.0, 6607.0], [475.0, 7285.0], [474.0, 6530.0], [473.0, 6532.0], [472.0, 6540.0], [471.0, 6562.0], [465.0, 6766.0], [467.0, 6447.0], [466.0, 7133.5], [470.0, 7118.0], [469.0, 6748.0], [468.0, 8768.0], [494.0, 6569.0], [495.0, 6503.0], [493.0, 6462.0], [492.0, 6149.0], [491.0, 6548.0], [490.0, 6613.0], [489.0, 2001.0], [488.0, 6339.5], [486.0, 6136.0], [481.0, 6178.0], [480.0, 7231.0], [483.0, 6137.0], [482.0, 6152.0], [485.0, 6640.0], [484.0, 6185.0], [510.0, 6519.0], [511.0, 6504.0], [509.0, 6475.0], [508.0, 5681.0], [507.0, 8322.0], [506.0, 6093.0], [505.0, 5702.0], [504.0, 7246.0], [503.0, 7878.0], [497.0, 6145.0], [496.0, 6206.0], [499.0, 3832.0], [498.0, 6499.0], [502.0, 6458.0], [501.0, 5757.0], [500.0, 6137.0], [540.0, 6451.0], [543.0, 4956.0], [529.0, 6844.0], [528.0, 6818.0], [531.0, 4856.0], [530.0, 6758.0], [533.0, 6811.0], [532.0, 6718.0], [542.0, 6808.0], [541.0, 7386.0], [539.0, 8212.0], [538.0, 6798.0], [537.0, 8313.0], [536.0, 2048.0], [527.0, 7292.0], [513.0, 6460.0], [512.0, 7256.0], [515.0, 6493.0], [514.0, 5781.0], [517.0, 6055.0], [516.0, 8096.0], [519.0, 6070.0], [518.0, 7266.0], [526.0, 8225.5], [524.0, 6369.0], [523.0, 6742.0], [522.0, 6402.0], [521.0, 6420.0], [520.0, 6114.0], [535.0, 6156.0], [534.0, 7609.0], [572.0, 5995.0], [575.0, 7646.0], [561.0, 5654.0], [560.0, 6772.0], [563.0, 8529.0], [562.0, 6608.0], [565.0, 7685.0], [564.0, 2392.0], [574.0, 7868.0], [573.0, 6722.0], [571.0, 5928.0], [570.0, 1507.0], [569.0, 8534.0], [568.0, 5516.0], [559.0, 6655.0], [545.0, 7493.0], [544.0, 8269.0], [547.0, 6781.0], [546.0, 6104.0], [549.0, 1523.0], [548.0, 7479.0], [551.0, 6647.0], [550.0, 6925.0], [558.0, 5967.0], [557.0, 5544.0], [556.0, 8437.0], [555.0, 7679.0], [554.0, 6032.0], [553.0, 5606.0], [552.0, 7584.0], [567.0, 5971.0], [566.0, 1968.0], [604.0, 9786.0], [607.0, 6718.0], [593.0, 6188.0], [592.0, 6620.0], [595.0, 5573.0], [594.0, 6198.0], [597.0, 6091.0], [596.0, 5465.0], [606.0, 6734.0], [605.0, 5260.0], [603.0, 6765.0], [602.0, 6055.0], [601.0, 5414.0], [600.0, 2807.0], [591.0, 5467.0], [576.0, 5594.0], [578.0, 6027.0], [577.0, 5263.0], [580.0, 5992.0], [579.0, 5524.0], [582.0, 6129.0], [581.0, 6329.0], [590.0, 8746.0], [589.0, 7726.0], [588.0, 6027.0], [587.0, 6795.0], [586.0, 7653.0], [585.0, 6011.0], [584.0, 6554.0], [599.0, 5877.0], [598.0, 7687.0], [632.0, 6256.0], [636.0, 6130.0], [639.0, 7985.0], [625.0, 6917.0], [624.0, 5279.0], [629.0, 7581.0], [626.0, 5974.0], [638.0, 7725.0], [637.0, 5187.0], [635.0, 6781.0], [634.0, 5906.0], [633.0, 7757.0], [623.0, 5331.0], [609.0, 5364.0], [608.0, 6028.0], [611.0, 7664.0], [610.0, 5954.0], [613.0, 5987.0], [612.0, 1315.0], [615.0, 5967.0], [614.0, 2878.0], [622.0, 6212.0], [621.0, 6426.0], [620.0, 6834.0], [619.0, 5277.0], [618.0, 7986.0], [617.0, 6908.0], [616.0, 7109.0], [631.0, 5502.0], [630.0, 5427.0], [668.0, 5541.0], [671.0, 5578.0], [657.0, 9059.0], [656.0, 5349.0], [659.0, 6074.0], [658.0, 2272.0], [661.0, 6155.0], [660.0, 1044.0], [670.0, 6354.0], [669.0, 8249.0], [667.0, 6135.0], [666.0, 7344.0], [665.0, 7183.0], [664.0, 6437.0], [655.0, 4094.0], [640.0, 6920.0], [642.0, 6066.0], [641.0, 8929.0], [645.0, 3927.0], [643.0, 7175.0], [647.0, 6116.0], [646.0, 5332.0], [653.0, 7044.0], [652.0, 6145.0], [651.0, 6100.0], [650.0, 6279.0], [649.0, 6272.0], [648.0, 6067.0], [663.0, 2286.0], [662.0, 6292.0], [700.0, 6377.0], [703.0, 1474.0], [689.0, 1525.0], [688.0, 12809.0], [691.0, 6413.0], [690.0, 8614.0], [693.0, 6261.0], [692.0, 6260.0], [702.0, 7763.0], [701.0, 6842.0], [699.0, 1685.0], [698.0, 7653.0], [697.0, 5552.0], [696.0, 7589.0], [687.0, 2407.0], [673.0, 5633.0], [672.0, 7425.0], [675.0, 5535.0], [674.0, 7217.0], [677.0, 2183.0], [676.0, 1455.0], [679.0, 5537.0], [678.0, 6514.0], [686.0, 7276.0], [685.0, 1059.0], [684.0, 4887.0], [682.0, 7461.0], [681.0, 5468.0], [680.0, 7355.0], [695.0, 1536.0], [694.0, 7256.0], [732.0, 970.0], [735.0, 971.0], [721.0, 1694.0], [720.0, 7644.0], [723.0, 1756.0], [722.0, 6980.0], [725.0, 6892.0], [724.0, 10498.0], [734.0, 1094.0], [733.0, 1123.0], [731.0, 1832.0], [730.0, 2535.0], [729.0, 12307.0], [728.0, 9638.0], [719.0, 2601.0], [705.0, 6596.0], [704.0, 1703.0], [707.0, 8615.0], [706.0, 1695.0], [709.0, 8857.0], [708.0, 1670.0], [711.0, 1569.0], [710.0, 1682.0], [718.0, 2572.0], [717.0, 6764.0], [716.0, 8582.0], [715.0, 8415.0], [714.0, 1559.0], [713.0, 2597.0], [712.0, 5487.0], [727.0, 7380.0], [726.0, 9174.0], [764.0, 2207.0], [767.0, 2367.0], [753.0, 8635.0], [752.0, 2348.0], [755.0, 7283.0], [754.0, 8462.0], [757.0, 2835.0], [756.0, 8784.0], [766.0, 2267.0], [765.0, 9225.0], [763.0, 1250.0], [762.0, 1528.0], [761.0, 8544.0], [760.0, 2099.0], [751.0, 10067.0], [737.0, 8082.0], [736.0, 7710.0], [739.0, 1257.0], [738.0, 13535.0], [741.0, 2908.0], [740.0, 7925.0], [743.0, 6175.0], [742.0, 2012.0], [750.0, 10101.0], [749.0, 1445.0], [748.0, 7980.0], [747.0, 2125.0], [746.0, 7327.0], [745.0, 1228.0], [744.0, 8029.0], [759.0, 7285.0], [758.0, 1950.0], [796.0, 11432.0], [799.0, 1782.0], [785.0, 6819.0], [784.0, 7942.0], [787.0, 6852.0], [786.0, 11208.0], [789.0, 11105.0], [788.0, 2202.0], [798.0, 12836.0], [797.0, 11722.0], [795.0, 8110.0], [794.0, 9537.0], [793.0, 8312.0], [792.0, 927.0], [783.0, 11137.0], [769.0, 1388.0], [768.0, 8806.0], [771.0, 638.0], [770.0, 12418.0], [773.0, 10837.0], [772.0, 10343.0], [775.0, 9044.0], [774.0, 2873.0], [782.0, 1651.0], [781.0, 760.0], [780.0, 3351.0], [779.0, 10749.0], [778.0, 7646.0], [777.0, 10857.0], [776.0, 10996.0], [791.0, 10787.0], [790.0, 9922.0], [828.0, 7433.0], [831.0, 6318.0], [817.0, 2907.0], [816.0, 6192.0], [819.0, 12983.0], [818.0, 1011.0], [821.0, 7602.0], [820.0, 10021.333333333332], [830.0, 3248.0], [829.0, 11189.0], [827.0, 7784.0], [826.0, 9591.5], [825.0, 1233.0], [824.0, 7746.0], [814.0, 8620.5], [801.0, 2454.0], [800.0, 8534.0], [803.0, 8466.0], [802.0, 11853.0], [805.0, 10031.0], [804.0, 8681.0], [807.0, 12134.0], [806.0, 9051.0], [813.0, 1974.0], [812.0, 1683.0], [811.0, 12112.0], [810.0, 7079.0], [809.0, 9973.0], [808.0, 12062.0], [823.0, 313.0], [822.0, 2811.0], [860.0, 12432.0], [863.0, 1439.0], [849.0, 11417.0], [848.0, 2709.0], [851.0, 11472.0], [850.0, 2202.0], [853.0, 11301.0], [852.0, 9591.0], [862.0, 10188.0], [861.0, 10283.0], [859.0, 11247.0], [858.0, 8276.0], [857.0, 10380.0], [856.0, 2008.0], [847.0, 8156.0], [833.0, 9246.0], [832.0, 2159.0], [835.0, 1025.0], [834.0, 2094.0], [837.0, 2085.0], [836.0, 11155.0], [839.0, 9313.0], [838.0, 13813.833333333332], [846.0, 2079.0], [845.0, 6952.0], [844.0, 9983.0], [843.0, 899.0], [842.0, 2038.0], [841.0, 9528.0], [840.0, 9550.0], [855.0, 8332.0], [854.0, 2214.0], [890.0, 10350.5], [894.0, 8100.0], [895.0, 4350.0], [881.0, 12284.5], [880.0, 11544.0], [883.0, 10800.0], [882.0, 12905.5], [885.0, 12161.375], [884.0, 10391.0], [893.0, 1341.0], [892.0, 7226.5], [891.0, 11862.0], [888.0, 7642.0], [871.0, 12771.5], [870.0, 10530.0], [869.0, 1335.0], [868.0, 7911.0], [867.0, 12446.0], [866.0, 11620.5], [865.0, 9364.5], [879.0, 11673.0], [878.0, 1951.0], [877.0, 10600.0], [876.0, 12966.666666666666], [875.0, 12518.333333333334], [874.0, 13242.0], [873.0, 7777.5], [872.0, 8242.5], [887.0, 598.0], [886.0, 7771.0], [924.0, 13447.09090909091], [927.0, 296.0], [913.0, 897.0], [912.0, 11424.0], [915.0, 11346.333333333332], [914.0, 11280.0], [917.0, 10568.0], [916.0, 10576.0], [926.0, 12077.181818181818], [925.0, 13561.0], [923.0, 7095.0], [922.0, 13593.933333333334], [921.0, 11434.0], [920.0, 12288.727272727272], [911.0, 13732.166666666668], [897.0, 10172.0], [896.0, 1490.0], [899.0, 12844.0], [898.0, 13319.0], [901.0, 13141.0], [900.0, 11008.0], [903.0, 12502.5], [902.0, 11820.0], [910.0, 869.0], [909.0, 1402.0], [908.0, 11391.0], [907.0, 13870.600000000002], [906.0, 12749.0], [905.0, 13917.5], [904.0, 1327.0], [919.0, 12424.0], [918.0, 13350.5], [956.0, 10249.0], [959.0, 12755.35294117647], [945.0, 8606.0], [944.0, 13914.2], [947.0, 13903.500000000002], [946.0, 12410.800000000001], [949.0, 10270.25], [948.0, 11940.25], [958.0, 12663.0], [957.0, 13349.5], [955.0, 12365.0], [954.0, 12849.5], [953.0, 12444.727272727272], [952.0, 13454.0], [943.0, 12921.5], [929.0, 13092.5], [928.0, 13449.0], [931.0, 11965.0], [930.0, 12947.59375], [933.0, 10672.25], [932.0, 13523.714285714286], [935.0, 12851.0625], [934.0, 13518.0], [942.0, 13002.92], [941.0, 13430.300000000001], [940.0, 13111.0], [939.0, 11563.2], [938.0, 818.0], [937.0, 13385.193548387097], [936.0, 12521.0], [951.0, 13762.1], [950.0, 12329.375], [988.0, 12116.106382978724], [991.0, 8335.6], [977.0, 12923.826086956522], [976.0, 12854.0], [979.0, 11796.857142857143], [978.0, 891.0], [981.0, 10665.333333333334], [980.0, 12611.5], [990.0, 10276.111111111113], [989.0, 10460.475000000002], [987.0, 5103.0], [986.0, 9257.0], [985.0, 13110.037037037036], [984.0, 11459.133333333333], [975.0, 12527.5], [960.0, 12068.5], [963.0, 3102.0], [962.0, 9491.0], [965.0, 12737.5625], [964.0, 7653.5], [967.0, 12865.444444444445], [966.0, 7278.0], [974.0, 12632.5], [973.0, 13074.37037037037], [972.0, 12898.235294117645], [971.0, 2887.0], [970.0, 12355.071428571428], [969.0, 11311.142857142857], [968.0, 11787.555555555555], [983.0, 12140.25], [982.0, 12111.071428571428], [1000.0, 3691.6], [999.0, 5285.265306122449], [998.0, 5812.281250000001], [997.0, 4798.874999999999], [996.0, 3737.285714285714], [995.0, 4516.6], [994.0, 4907.977272727272], [993.0, 7469.124999999999], [992.0, 10158.615384615387], [1.0, 3110.0]], "isOverall": false, "label": "/sys/user/psw/reset", "isController": false}, {"data": [[732.7914999999999, 8691.86700000001]], "isOverall": false, "label": "/sys/user/psw/reset-Aggregated", "isController": false}, {"data": [[292.0, 8051.0], [334.0, 4674.0], [411.0, 7652.0], [428.0, 7680.0], [427.0, 8427.0], [423.0, 4922.0], [445.0, 4283.0], [444.0, 5411.0], [442.0, 5973.0], [438.0, 4307.0], [456.0, 6142.0], [449.0, 6063.0], [494.0, 5296.0], [489.0, 5256.5], [511.0, 5605.0], [510.0, 5647.0], [508.0, 6004.5], [507.0, 6005.0], [504.0, 5071.0], [501.0, 4996.0], [500.0, 4762.0], [499.0, 5526.0], [520.0, 5647.0], [574.0, 6555.0], [575.0, 5470.333333333333], [569.0, 5886.0], [567.0, 5511.0], [562.0, 4975.0], [558.0, 5500.0], [557.0, 5936.0], [555.0, 5517.0], [549.0, 4974.0], [607.0, 4891.5], [604.0, 5195.0], [600.0, 5329.0], [597.0, 6739.0], [596.0, 5390.0], [581.0, 5495.0], [576.0, 5517.0], [638.0, 5132.0], [639.0, 5671.0], [637.0, 5160.0], [634.0, 5833.0], [633.0, 5488.0], [615.0, 5247.0], [613.0, 4858.0], [627.0, 4731.0], [626.0, 5789.0], [624.0, 5189.0], [623.0, 5196.0], [621.0, 5211.0], [619.0, 5204.0], [667.0, 5304.0], [671.0, 4519.0], [666.0, 5330.333333333333], [645.0, 6236.333333333333], [643.0, 5952.0], [642.0, 5205.25], [641.0, 5567.5], [663.0, 5265.0], [660.0, 5268.0], [659.0, 4635.0], [658.0, 5300.0], [655.0, 4935.75], [651.0, 4583.0], [691.0, 5406.0], [700.0, 6260.5], [699.0, 5443.0], [697.0, 5470.666666666667], [679.0, 6215.0], [678.0, 5735.5], [673.0, 4900.0], [687.0, 5198.0], [681.0, 5353.0], [680.0, 5359.0], [694.0, 5035.5], [693.0, 5337.0], [692.0, 5376.25], [690.0, 5392.666666666667], [689.0, 5389.0], [732.0, 5690.0], [734.0, 5866.0], [735.0, 5756.0], [733.0, 4986.0], [730.0, 5758.5], [728.0, 5837.0], [727.0, 5727.4], [720.0, 6057.5], [719.0, 7051.5], [704.0, 5382.5], [717.0, 6049.8], [716.0, 5339.333333333333], [715.0, 6612.0], [712.0, 5309.0], [753.0, 5183.0], [764.0, 6221.0], [765.0, 5327.0], [752.0, 6127.0], [763.0, 6153.0], [761.0, 6245.5], [760.0, 6248.4], [741.0, 5821.666666666666], [739.0, 5662.6], [738.0, 5507.5], [737.0, 5781.0], [751.0, 6079.0], [749.0, 6076.0], [747.0, 5989.666666666667], [746.0, 6005.0], [745.0, 6016.428571428572], [744.0, 5924.0], [759.0, 6180.0], [757.0, 9169.5], [754.0, 6053.0], [794.0, 7635.0], [787.0, 8919.0], [798.0, 8462.8], [799.0, 7358.0], [785.0, 6748.0], [795.0, 5855.0], [793.0, 7079.333333333333], [775.0, 6678.0], [774.0, 6586.0], [773.0, 7023.700000000001], [772.0, 5820.5], [771.0, 7957.0], [770.0, 6651.75], [769.0, 6284.0], [768.0, 6196.333333333333], [783.0, 7150.75], [781.0, 7407.0], [780.0, 6318.333333333333], [778.0, 7505.0], [791.0, 7808.333333333333], [789.0, 6664.4], [788.0, 9372.0], [824.0, 8050.333333333333], [828.0, 7953.714285714285], [830.0, 7538.2], [816.0, 6993.888888888889], [819.0, 8851.0], [817.0, 7291.333333333333], [827.0, 10647.0], [826.0, 8464.333333333334], [825.0, 7388.0], [814.0, 7904.0], [801.0, 7091.749999999999], [800.0, 8098.0], [803.0, 6720.5], [802.0, 7304.0], [805.0, 5944.0], [804.0, 6743.0], [807.0, 7252.5], [806.0, 7497.5], [813.0, 7933.5], [811.0, 7632.000000000001], [809.0, 6707.75], [808.0, 6416.75], [823.0, 5996.0], [822.0, 6660.5], [821.0, 10392.0], [820.0, 8111.25], [861.0, 8269.0], [863.0, 7884.5], [850.0, 7318.0], [848.0, 9534.5], [852.0, 7956.5], [851.0, 8017.0], [860.0, 6991.0], [859.0, 8166.0], [858.0, 8170.0], [857.0, 7303.0], [856.0, 8088.0], [838.0, 9165.0], [833.0, 7861.6], [846.0, 9251.0], [845.0, 7729.5], [844.0, 8008.5], [843.0, 7315.25], [842.0, 7887.0], [841.0, 7278.333333333333], [840.0, 8029.0], [855.0, 8208.0], [854.0, 7922.4], [892.0, 8742.0], [884.0, 9023.09090909091], [894.0, 7889.5], [881.0, 8922.000000000002], [880.0, 9026.5], [890.0, 9583.5], [888.0, 9002.333333333334], [879.0, 8712.2], [866.0, 7656.5], [865.0, 8351.0], [869.0, 7595.5], [868.0, 8136.2], [871.0, 8365.0], [870.0, 10021.0], [878.0, 9517.0], [876.0, 8328.75], [875.0, 8364.0], [874.0, 8024.95], [873.0, 9645.0], [872.0, 8369.666666666666], [887.0, 9501.5], [886.0, 9246.0], [885.0, 9700.636363636364], [883.0, 8546.0], [882.0, 8949.0], [921.0, 10118.0], [925.0, 9822.0], [923.0, 454.0], [926.0, 10379.9], [912.0, 10293.2], [915.0, 10151.1], [913.0, 7761.25], [917.0, 10596.333333333334], [916.0, 10256.6], [924.0, 10412.375], [922.0, 10170.449999999999], [920.0, 9019.714285714286], [903.0, 9153.4], [902.0, 9873.0], [901.0, 9342.333333333334], [899.0, 9945.0], [897.0, 9125.1875], [911.0, 9608.75], [910.0, 10268.0], [908.0, 10207.5], [907.0, 9020.222222222223], [906.0, 9663.333333333334], [905.0, 10866.333333333334], [904.0, 10157.0], [919.0, 10430.666666666666], [918.0, 10228.066666666668], [955.0, 11499.0], [948.0, 858.0], [958.0, 64.0], [959.0, 7576.166666666666], [946.0, 9369.8], [944.0, 11448.0], [956.0, 5477.5], [953.0, 3021.75], [935.0, 11356.6], [934.0, 11202.0], [933.0, 11363.0], [932.0, 10849.0], [930.0, 9103.761904761903], [929.0, 10434.320000000003], [928.0, 10659.5], [943.0, 11319.0], [942.0, 8585.75], [941.0, 11482.0], [940.0, 11235.0], [939.0, 11881.5], [937.0, 10283.266666666666], [936.0, 11139.0], [951.0, 5029.6], [950.0, 11474.8], [949.0, 11380.0], [989.0, 8163.3076923076915], [990.0, 2017.4285714285716], [976.0, 10963.0], [979.0, 10795.0], [977.0, 5940.0], [988.0, 5821.5], [986.0, 612.0], [985.0, 4090.3999999999996], [984.0, 5498.0], [975.0, 10993.0], [962.0, 118.0], [967.0, 111.0], [965.0, 8554.0], [974.0, 6953.4], [973.0, 8159.857142857144], [972.0, 11190.375], [970.0, 11098.6], [968.0, 11999.0], [983.0, 4970.222222222223], [982.0, 8245.500000000002], [981.0, 10728.0], [980.0, 5347.166666666667], [1000.0, 5165.8793456032745], [999.0, 8818.249999999998], [998.0, 10708.822222222225], [997.0, 11367.125000000002], [996.0, 13202.866666666667], [995.0, 12538.103448275864], [994.0, 12491.3125], [993.0, 14319.6], [992.0, 79.0]], "isOverall": false, "label": "/sys/user/state/update", "isController": false}, {"data": [[924.8219999999995, 7954.896500000006]], "isOverall": false, "label": "/sys/user/state/update-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1540.0, "minX": 1.62977607E12, "maxY": 52865.0, "series": [{"data": [[1.629776072E12, 17856.0], [1.629776092E12, 24659.0], [1.62977607E12, 2880.0], [1.629776096E12, 42252.0], [1.629776074E12, 23184.0], [1.629776094E12, 30123.5], [1.629776088E12, 23204.0], [1.629776108E12, 18312.5], [1.629776086E12, 26796.5], [1.62977609E12, 24505.0], [1.629776104E12, 28795.5], [1.629776082E12, 29088.0], [1.629776102E12, 36400.0], [1.629776106E12, 36620.0], [1.629776084E12, 24768.0], [1.629776098E12, 48872.0], [1.629776076E12, 22752.0], [1.62977608E12, 28944.0], [1.6297761E12, 52865.0], [1.629776078E12, 35568.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.629776072E12, 9539.0], [1.629776092E12, 14680.0], [1.62977607E12, 1540.0], [1.629776096E12, 24010.5], [1.629776074E12, 12447.5], [1.629776094E12, 17912.0], [1.629776088E12, 13754.0], [1.629776108E12, 11126.5], [1.629776086E12, 16177.5], [1.62977609E12, 14707.5], [1.629776104E12, 17222.0], [1.629776082E12, 16088.5], [1.629776102E12, 21170.0], [1.629776106E12, 22226.5], [1.629776084E12, 14164.0], [1.629776098E12, 27441.0], [1.629776076E12, 12331.5], [1.62977608E12, 15931.0], [1.6297761E12, 29629.5], [1.629776078E12, 19699.5]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 2000, "maxX": 1.629776108E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1177.4, "minX": 1.62977607E12, "maxY": 12896.605263157893, "series": [{"data": [[1.629776092E12, 12404.734375000002], [1.629776096E12, 12280.950413223145], [1.629776074E12, 2796.8], [1.629776094E12, 12896.605263157893], [1.629776088E12, 12096.756521739127], [1.629776108E12, 5397.911999999998], [1.629776086E12, 10817.608974358976], [1.62977609E12, 12573.773722627739], [1.629776104E12, 6507.017543859651], [1.629776082E12, 5178.488888888888], [1.629776102E12, 5985.243749999996], [1.629776106E12, 6483.439516129033], [1.629776084E12, 5393.025974025974], [1.629776098E12, 9496.344537815125], [1.629776076E12, 3652.7333333333336], [1.62977608E12, 5767.615384615384], [1.6297761E12, 6448.023437500001], [1.629776078E12, 5050.474576271186]], "isOverall": false, "label": "/sys/user/psw/reset", "isController": false}, {"data": [[1.629776072E12, 3210.927419354839], [1.629776092E12, 7535.116279069767], [1.62977607E12, 1177.4], [1.629776096E12, 10002.348837209303], [1.629776074E12, 4948.839743589745], [1.629776094E12, 10117.771929824563], [1.629776088E12, 5724.630434782607], [1.629776086E12, 5543.000000000001], [1.62977609E12, 9256.424242424244], [1.629776104E12, 5653.846153846154], [1.629776082E12, 11747.796178343948], [1.629776102E12, 5401.155555555555], [1.629776106E12, 6362.5], [1.629776084E12, 12579.284210526317], [1.629776098E12, 8569.091324200914], [1.629776076E12, 6617.888111888113], [1.62977608E12, 9927.450617283948], [1.6297761E12, 6847.928270042193], [1.629776078E12, 8619.143617021273]], "isOverall": false, "label": "/sys/user/state/update", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 2000, "maxX": 1.629776108E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1176.15, "minX": 1.62977607E12, "maxY": 12896.453947368413, "series": [{"data": [[1.629776092E12, 12404.539062500002], [1.629776096E12, 12280.884297520659], [1.629776074E12, 2796.4], [1.629776094E12, 12896.453947368413], [1.629776088E12, 12096.582608695655], [1.629776108E12, 5397.735999999997], [1.629776086E12, 10817.38461538461], [1.62977609E12, 12573.613138686125], [1.629776104E12, 6506.90058479532], [1.629776082E12, 5178.28888888889], [1.629776102E12, 5985.068749999999], [1.629776106E12, 6483.306451612902], [1.629776084E12, 5392.792207792208], [1.629776098E12, 9496.235294117647], [1.629776076E12, 3652.3333333333335], [1.62977608E12, 5766.820512820514], [1.6297761E12, 6447.843749999996], [1.629776078E12, 5050.050847457627]], "isOverall": false, "label": "/sys/user/psw/reset", "isController": false}, {"data": [[1.629776072E12, 3210.314516129032], [1.629776092E12, 7534.7441860465115], [1.62977607E12, 1176.15], [1.629776096E12, 10002.139534883729], [1.629776074E12, 4948.307692307694], [1.629776094E12, 10117.70175438597], [1.629776088E12, 5724.369565217389], [1.629776086E12, 5542.533333333334], [1.62977609E12, 9256.12121212121], [1.629776104E12, 5653.615384615384], [1.629776082E12, 11747.50318471337], [1.629776102E12, 5401.000000000001], [1.629776106E12, 6362.0], [1.629776084E12, 12579.052631578948], [1.629776098E12, 8568.675799086755], [1.629776076E12, 6617.517482517485], [1.62977608E12, 9927.135802469133], [1.6297761E12, 6847.763713080169], [1.629776078E12, 8618.835106382985]], "isOverall": false, "label": "/sys/user/state/update", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 2000, "maxX": 1.629776108E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.62977607E12, "maxY": 857.6436170212763, "series": [{"data": [[1.629776092E12, 0.0], [1.629776096E12, 0.0], [1.629776074E12, 0.0], [1.629776094E12, 0.0], [1.629776088E12, 0.0], [1.629776108E12, 0.0], [1.629776086E12, 0.0], [1.62977609E12, 0.0], [1.629776104E12, 0.0], [1.629776082E12, 0.0], [1.629776102E12, 0.0], [1.629776106E12, 0.0], [1.629776084E12, 0.0], [1.629776098E12, 0.0], [1.629776076E12, 0.0], [1.62977608E12, 0.0], [1.6297761E12, 0.0], [1.629776078E12, 0.0]], "isOverall": false, "label": "/sys/user/psw/reset", "isController": false}, {"data": [[1.629776072E12, 259.30645161290323], [1.629776092E12, 0.0], [1.62977607E12, 250.90000000000003], [1.629776096E12, 0.0], [1.629776074E12, 390.5448717948719], [1.629776094E12, 0.0], [1.629776088E12, 0.0], [1.629776086E12, 33.999999999999986], [1.62977609E12, 0.0], [1.629776104E12, 0.0], [1.629776082E12, 539.6496815286625], [1.629776102E12, 0.0], [1.629776106E12, 0.0], [1.629776084E12, 561.2736842105261], [1.629776098E12, 0.0], [1.629776076E12, 677.0419580419582], [1.62977608E12, 711.2716049382716], [1.6297761E12, 0.0], [1.629776078E12, 857.6436170212763]], "isOverall": false, "label": "/sys/user/state/update", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 2000, "maxX": 1.629776108E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 9.0, "minX": 1.62977607E12, "maxY": 17715.0, "series": [{"data": [[1.629776072E12, 4200.0], [1.629776092E12, 17248.0], [1.62977607E12, 1702.0], [1.629776096E12, 16335.0], [1.629776074E12, 6173.0], [1.629776094E12, 16645.0], [1.629776088E12, 16550.0], [1.629776108E12, 7602.0], [1.629776086E12, 16340.0], [1.62977609E12, 17715.0], [1.629776104E12, 8833.0], [1.629776082E12, 13883.0], [1.629776102E12, 12809.0], [1.629776106E12, 10538.0], [1.629776084E12, 15266.0], [1.629776098E12, 16254.0], [1.629776076E12, 8089.0], [1.62977608E12, 11833.0], [1.6297761E12, 17479.0], [1.629776078E12, 10134.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.629776072E12, 3846.0], [1.629776092E12, 14286.0], [1.62977607E12, 1643.6000000000004], [1.629776096E12, 13839.0], [1.629776074E12, 5716.0], [1.629776094E12, 14396.0], [1.629776088E12, 14519.000000000002], [1.629776108E12, 6809.8], [1.629776086E12, 14104.7], [1.62977609E12, 14391.3], [1.629776104E12, 7802.2], [1.629776082E12, 12994.7], [1.629776102E12, 7641.8], [1.629776106E12, 8100.1], [1.629776084E12, 14201.0], [1.629776098E12, 13183.700000000003], [1.629776076E12, 7633.1], [1.62977608E12, 11422.4], [1.6297761E12, 10178.200000000006], [1.629776078E12, 9660.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.629776072E12, 4180.0], [1.629776092E12, 16124.800000000001], [1.62977607E12, 1702.0], [1.629776096E12, 15542.380000000001], [1.629776074E12, 6137.66], [1.629776094E12, 15865.3], [1.629776088E12, 16411.739999999998], [1.629776108E12, 7596.28], [1.629776086E12, 16171.22], [1.62977609E12, 16648.579999999987], [1.629776104E12, 8769.300000000001], [1.629776082E12, 13419.91], [1.629776102E12, 9415.230000000007], [1.629776106E12, 10175.960000000005], [1.629776084E12, 15211.25], [1.629776098E12, 15269.780000000002], [1.629776076E12, 8089.0], [1.62977608E12, 11759.72], [1.6297761E12, 15616.979999999983], [1.629776078E12, 10055.92]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.629776072E12, 3969.25], [1.629776092E12, 14996.8], [1.62977607E12, 1699.7], [1.629776096E12, 14544.6], [1.629776074E12, 5926.5], [1.629776094E12, 14790.5], [1.629776088E12, 15194.6], [1.629776108E12, 7084.2], [1.629776086E12, 14509.050000000001], [1.62977609E12, 15117.7], [1.629776104E12, 8273.4], [1.629776082E12, 13191.7], [1.629776102E12, 7985.45], [1.629776106E12, 8685.499999999998], [1.629776084E12, 14679.15], [1.629776098E12, 14416.05], [1.629776076E12, 7850.8499999999985], [1.62977608E12, 11581.6], [1.6297761E12, 11813.699999999999], [1.629776078E12, 9845.8]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.629776072E12, 2134.0], [1.629776092E12, 9.0], [1.62977607E12, 454.0], [1.629776096E12, 37.0], [1.629776074E12, 126.0], [1.629776094E12, 25.0], [1.629776088E12, 32.0], [1.629776108E12, 1546.0], [1.629776086E12, 24.0], [1.62977609E12, 31.0], [1.629776104E12, 1993.0], [1.629776082E12, 20.0], [1.629776102E12, 693.0], [1.629776106E12, 2010.0], [1.629776084E12, 63.0], [1.629776098E12, 406.0], [1.629776076E12, 40.0], [1.62977608E12, 13.0], [1.6297761E12, 181.0], [1.629776078E12, 20.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.629776072E12, 3265.5], [1.629776092E12, 12865.0], [1.62977607E12, 1199.0], [1.629776096E12, 10778.0], [1.629776074E12, 4974.0], [1.629776094E12, 12771.0], [1.629776088E12, 11917.0], [1.629776108E12, 5655.0], [1.629776086E12, 12125.5], [1.62977609E12, 12677.5], [1.629776104E12, 6458.0], [1.629776082E12, 11945.5], [1.629776102E12, 5896.0], [1.629776106E12, 6399.0], [1.629776084E12, 13137.5], [1.629776098E12, 8750.0], [1.629776076E12, 6655.5], [1.62977608E12, 10570.0], [1.6297761E12, 6711.0], [1.629776078E12, 8673.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 2000, "maxX": 1.629776108E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 917.0, "minX": 8.0, "maxY": 13377.0, "series": [{"data": [[42.0, 2737.0], [61.0, 6053.0], [73.0, 12257.0], [79.0, 5402.0], [77.0, 7294.0], [82.0, 4025.0], [81.0, 6676.0], [87.0, 10254.0], [86.0, 12513.0], [90.0, 12302.5], [88.0, 11580.0], [92.0, 6399.5], [96.0, 12642.5], [97.0, 12756.0], [106.0, 8226.5], [105.0, 6462.0], [111.0, 13377.0], [108.0, 5972.5], [114.0, 11033.0], [113.0, 12787.0], [112.0, 6199.0], [116.0, 11784.0], [125.0, 5655.0], [8.0, 917.0], [129.0, 11246.0], [141.0, 9291.0], [143.0, 8184.0], [142.0, 5546.5], [138.0, 6409.5], [146.0, 7051.5], [164.0, 10372.5], [12.0, 1342.5], [195.0, 9381.0], [219.0, 6146.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 219.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 917.0, "minX": 8.0, "maxY": 13377.0, "series": [{"data": [[42.0, 2736.5], [61.0, 6053.0], [73.0, 12257.0], [79.0, 5402.0], [77.0, 7293.0], [82.0, 4024.5], [81.0, 6675.5], [87.0, 10254.0], [86.0, 12513.0], [90.0, 12302.0], [88.0, 11580.0], [92.0, 6399.5], [96.0, 12642.5], [97.0, 12756.0], [106.0, 8226.0], [105.0, 6461.0], [111.0, 13377.0], [108.0, 5972.5], [114.0, 11032.5], [113.0, 12787.0], [112.0, 6198.5], [116.0, 11784.0], [125.0, 5654.0], [8.0, 917.0], [129.0, 11246.0], [141.0, 9287.0], [143.0, 8182.0], [142.0, 5546.0], [138.0, 6409.5], [146.0, 7051.5], [164.0, 10372.5], [12.0, 1341.0], [195.0, 9381.0], [219.0, 6146.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 219.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.629776068E12, "maxY": 378.5, "series": [{"data": [[1.629776072E12, 62.0], [1.629776092E12, 76.0], [1.62977607E12, 378.5], [1.629776096E12, 134.5], [1.629776074E12, 80.5], [1.629776094E12, 96.5], [1.629776088E12, 76.5], [1.629776086E12, 89.0], [1.62977609E12, 79.0], [1.629776068E12, 131.5], [1.629776104E12, 13.0], [1.629776082E12, 99.5], [1.629776102E12, 45.5], [1.629776106E12, 1.0], [1.629776084E12, 85.0], [1.629776098E12, 129.0], [1.629776076E12, 79.0], [1.62977608E12, 99.5], [1.6297761E12, 121.0], [1.629776078E12, 123.5]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 2000, "maxX": 1.629776106E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.62977607E12, "maxY": 182.5, "series": [{"data": [[1.629776072E12, 62.0], [1.629776092E12, 85.5], [1.62977607E12, 10.0], [1.629776096E12, 146.5], [1.629776074E12, 80.5], [1.629776094E12, 104.5], [1.629776088E12, 80.5], [1.629776108E12, 62.5], [1.629776086E12, 93.0], [1.62977609E12, 85.0], [1.629776104E12, 98.5], [1.629776082E12, 101.0], [1.629776102E12, 125.0], [1.629776106E12, 125.0], [1.629776084E12, 86.0], [1.629776098E12, 169.0], [1.629776076E12, 79.0], [1.62977608E12, 100.5], [1.6297761E12, 182.5], [1.629776078E12, 123.5]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 2000, "maxX": 1.629776108E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.62977607E12, "maxY": 124.0, "series": [{"data": [[1.629776072E12, 62.0], [1.629776092E12, 21.5], [1.62977607E12, 10.0], [1.629776096E12, 86.0], [1.629776074E12, 78.0], [1.629776094E12, 28.5], [1.629776088E12, 23.0], [1.629776086E12, 15.0], [1.62977609E12, 16.5], [1.629776104E12, 13.0], [1.629776082E12, 78.5], [1.629776102E12, 45.0], [1.629776106E12, 1.0], [1.629776084E12, 47.5], [1.629776098E12, 109.5], [1.629776076E12, 71.5], [1.62977608E12, 81.0], [1.6297761E12, 118.5], [1.629776078E12, 94.0]], "isOverall": false, "label": "/sys/user/state/update-success", "isController": false}, {"data": [[1.629776092E12, 64.0], [1.629776096E12, 60.5], [1.629776074E12, 2.5], [1.629776094E12, 76.0], [1.629776088E12, 57.5], [1.629776108E12, 62.5], [1.629776086E12, 78.0], [1.62977609E12, 68.5], [1.629776104E12, 85.5], [1.629776082E12, 22.5], [1.629776102E12, 80.0], [1.629776106E12, 124.0], [1.629776084E12, 38.5], [1.629776098E12, 59.5], [1.629776076E12, 7.5], [1.62977608E12, 19.5], [1.6297761E12, 64.0], [1.629776078E12, 29.5]], "isOverall": false, "label": "/sys/user/psw/reset-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 2000, "maxX": 1.629776108E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.62977607E12, "maxY": 182.5, "series": [{"data": [[1.629776072E12, 62.0], [1.629776092E12, 85.5], [1.62977607E12, 10.0], [1.629776096E12, 146.5], [1.629776074E12, 80.5], [1.629776094E12, 104.5], [1.629776088E12, 80.5], [1.629776108E12, 62.5], [1.629776086E12, 93.0], [1.62977609E12, 85.0], [1.629776104E12, 98.5], [1.629776082E12, 101.0], [1.629776102E12, 125.0], [1.629776106E12, 125.0], [1.629776084E12, 86.0], [1.629776098E12, 169.0], [1.629776076E12, 79.0], [1.62977608E12, 100.5], [1.6297761E12, 182.5], [1.629776078E12, 123.5]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 2000, "maxX": 1.629776108E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

